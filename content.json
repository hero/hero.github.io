{"pages":[{"title":"categories","text":"","link":"/categories/index.html"},{"title":"friends","text":"","link":"/friends/index.html"},{"title":"about","text":"这家伙很懒~~","link":"/about/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"使用Netlify托管自己的博客","text":"她太美了，一见钟情… 1. 什么是Netlify Netlify是一个功能强大的静态站点托管，她具有如下功能： 托管静态资源 将静态网站部署到CDN上 Continuous Deployment 持续部署，当你提交改变到git 仓库，它就会自动运行build command，进行自动部署。 可以添加自定义域名 可以启用免费的TLS证书，启用HTTPS 完美支持Github，你Github中的所有前端项目都可以用她发布预览 有了她，什么Github Pages就可以放弃了！ 2. 食用指南 首先，打开Netlify页面，然后用你的Github账号登录即可。 第一次需要Github授权，以后登录就不需要了。虽说Netlify国内也可以访问，但是为了更好的体验，还是自行搭梯子。 登录进去之后，点击New site from Git，出现如下界面： 然后选择Github，选择你需要Netlify托管和发布的Repo： 如果没有配置过，就点击Configure the Netlify app on Github，按照弹出来的指引完成Repository的配置： 在Netlify配置界面，单击Github中已经授权登录的Repo，出现Deploy配置界面，默认就好了，因为Netlify智能识别了它是Hexo站点，点击Deploy site完成。 点击 ⚙️Site Settings按钮 ，可以修改Site name： 只要不冲突，就可以用这个域名了。 处理部署失败 第一次部署失败了，因为我的hexo-blog目录中的.gitingnore过滤掉了public/目录。 12312:57:09 PM: Failing build: Failed to build site12:57:09 PM: failed during stage &apos;building site&apos;: Deploy directory &apos;public/&apos; does not exist12:57:09 PM: Finished processing build request in 1m3.247601171s 解决办法就是修改hexo-blog目录中的.gitingnore，保留public/index.html文件： 12345678.DS_StoreThumbs.dbdb.json*.lognode_modules/public/*!public/index.html.deploy*/ 但是要注意的是，每次执行hexo clean命令都会删除这个public/目录的，所以的Push到Github之前，记得本地hexo g一下： 12345# 清除缓存，重新生成hexo clean &amp; hexo g# 本地浏览hexo s# 浏览没问题了，再git add . &amp; git commit &amp; git push 为啥Page nof found？ 部署成功了，但是访问页面却显示Page not found: 查看Deploy日志，hexo generate命令之后的部分： 12345678910111213141516171819202122232425262728293031323334353637382:30:32 PM: Executing user command: hexo generate2:30:34 PM: INFO =======================================2:30:34 PM: ██╗ ██████╗ █████╗ ██████╗ ██╗ ██╗███████╗2:30:34 PM: ██║██╔════╝██╔══██╗██╔══██╗██║ ██║██╔════╝2:30:34 PM: ██║██║ ███████║██████╔╝██║ ██║███████╗2:30:34 PM: ██║██║ ██╔══██║██╔══██╗██║ ██║╚════██║2:30:34 PM: ██║╚██████╗██║ ██║██║ ██║╚██████╔╝███████║2:30:34 PM: ╚═╝ ╚═════╝╚═╝ ╚═╝╚═╝ ╚═╝ ╚═════╝ ╚══════╝2:30:34 PM: =============================================2:30:34 PM: INFO Checking dependencies2:30:34 PM: INFO Validating the configuration file2:30:34 PM: WARN themes/icarus/_config.yml is not found. We are creating one for you...2:30:34 PM: INFO themes/icarus/_config.yml is created. Please restart Hexo to apply changes.2:30:34 PM: Skipping functions preparation step: no functions directory set2:30:34 PM: Caching artifacts2:30:34 PM: Started saving node modules2:30:34 PM: Finished saving node modules2:30:34 PM: Started saving yarn cache2:30:34 PM: Finished saving yarn cache2:30:34 PM: Started saving pip cache2:30:34 PM: Finished saving pip cache2:30:34 PM: Started saving emacs cask dependencies2:30:34 PM: Finished saving emacs cask dependencies2:30:34 PM: Started saving maven dependencies2:30:34 PM: Finished saving maven dependencies2:30:34 PM: Started saving boot dependencies2:30:34 PM: Finished saving boot dependencies2:30:34 PM: Started saving go dependencies2:30:34 PM: Finished saving go dependencies2:30:34 PM: Build script success2:30:34 PM: Starting to deploy site from 'public/'2:30:34 PM: Creating deploy tree 2:30:34 PM: 0 new files to upload2:30:34 PM: Starting post processing2:30:34 PM: 0 new functions to upload2:30:34 PM: Post processing done2:30:34 PM: Site is live2:30:51 PM: Finished processing build request in 1m21.11547795s 认真检查上面的日志，发现有一个容易被忽略的警告: 1themes/icarus/_config.yml is not found. We are creating one for you... 检查本地博客根目录下的themes/icarus/目录里面，发现有个.gitignore文件，将这个自己辛苦配置的主题配置文件_config.yml文件给过滤掉了，而本地浏览由于目录没有清理过，没有出现问题，但是在远程主机上，没有它很显然主题icarus没法工作的！ 处理办法也简单，删除themes/icarus/.gitignore文件，重新Push &amp; Deploy！ 3. 自定义域名、添加HTTPS 这个需要自己有域名了，我以前注册过自己id的域名，做一些前端开发测试用。 我的域名是herowuking.com，在阿里云注册的。首先在Netlify的管理页面，进入站点的配置界面Domain management，然后Add custom domain，输入自己的域名，需要Verify一下，然后Check DNS configuration 在弹出的对话框中，有两种办法： 添加一条A记录指向固定IP； 使用ALIAS或ANAME记录。 浏览到页面的最新部分，发现还有更优的方案–直接使用Netlify提供的DNS服务 点击Set up Netlify DNS for herowuking.com链接，Verify，Continue之后会得到几个DNS服务器地址，例如： 1234dns1.p06.nsone.netdns2.p06.nsone.netdns3.p06.nsone.netdns4.p06.nsone.net 拿到这个DNS服务器地址之后，进入阿里云控制台，域名管理： 然后，修改DNS为上面Netlify提供的。 阿里云会给你发一条短信验证码，填进去确认即可。 很快，在Netlify的Domain management页面的底部，找到HTTPS设置的地方，先Verfify DNS configuration，看看是否成功： 不出意外应该有DNS verification was successful✔️的提示，表明自定义域名设置成功了，你可以用自己的域名访问博客试一试了。 使用Netlify提供的DNS服务有一个好处，就是设置完之后HTTPS证书自动就配置好了： 墙内的悲哀 刚刚一顿操作猛如虎，结果发现自己开着SwitchyOmega，浏览器是通过代理访问的😂 关闭代理直接连接，发现无法正常访问herowuking.com这个自定义域名了。 墙内的悲哀🖕 用代理有各种限制，流量也不够 哎，在墙内还是老老实实使用阿里云的DNS解析服务器吧，回到Netlify控制台，删除刚刚的DNS配置。 注意路径： 登录Netlify–&gt;选择第3个标签页Domain–&gt;在页面的最下面，有个Delete DNS Zone按钮，确认之后删除。 站点Sites里面的DNS配置根据提示，应该使用www.herowuking.com作为主记录，因此也删了重新配置。 确认之后，发现有2个个性化域名： 点击Check DNS configuration，发现里面需要添加的记录不一样。 www.herowuking.com: 添加CNAME记录 herowuking.com: 添加ALIAS记录和A记录 在阿里云控制台域名解析里面的配置如下： 主机记录 记录类型 解析路线 记录值 TTL www CNAME 中国联通 wuking.netlify.com 1 小时 @ A 中国联通 104.198.14.52 1 小时 @ NS 中国联通 wuking.netlify.com 1 小时 这样，站点访问正常了，而且意外地发现上面激活的HTTPS证书还有效： 就是没法自动续签了，有效期只有3个月，如果到期了就要手工处理了。 将默认的netlify二级域名重定向到个性域名 处于SEO的考虑，如果想将Netlify提供的二级域名wuking.netlify.net，自动重定向到www.herowuking.com这个个性化域名地址。需要在站点发布的目录下新建一个_redirects文件，内容如下： 1234# These rules will change if you change your site’s custom domains or HTTPS settings# Redirect default Netlify subdomain to primary domainhttps://wuking.netlify.com/* https://www.herowuking.com/:splat 301! 也就是说，要做public/目录下增加这个文件_redirects。同时，修改一下.gitignore文件： 12345678.DS_StoreThumbs.dbdb.json*.lognode_modules/public/*!public/_redirects.deploy*/ 以上操作参考的是官方文档","link":"/categories/Hexo/netlify/"},{"title":"使用Proxifier代理安装Qt for Golang","text":"最近显得无事，打算挖个新坑玩一下Go语言开发App，GUI就用Qt了。 0. Go语言GUI框架 Qt binding for Go Github Repo、Exapmples 1. 安装方法 首先，要确保电脑上已经正确安装了Go和Qt5(推荐版本v5.13.0) 然后在执行安装命令： 12set GO111MODULE=offgo get -v github.com/therecipe/qt/cmd/... &amp;&amp; for /f %v in ('go env GOPATH') do %v\\bin\\qtsetup test &amp;&amp; %v\\bin\\qtsetup -test=false 毫无例外，遇到了无法访问golang.org/x/tools/imports的问题，因为墙的存在，需要用代理软件。 2.安装和使用Proxifier Proxifier类似以前用过的CCProxy，感觉更强大一些，自行搜索安装。启动之后的配置如下： Enable HTTP proxy servers support 【Profile】–&gt;【Advanced】–&gt;【HTTP Proxy Server…】，在弹出的对话框中勾选Enable HTTP Proxy servers support选项。 Proxy Server设置 【Profile】–&gt;【Proxy Server…】, 根据自己找到的代理正确设置，确保Check通过！ 经测试发现HTTPS代理可用，HTTP的代理无法用来正确安装Qt for Golang。 Proxification Rules设置 【Profile】–&gt;【Proxification Rules…】, 这里就是设置让哪些软件通过代理连接外网了，注意在执行go get命令的时候，不仅命令行终端需要通过代理上网，而且在命令执行过程中还需要调用go.exe、git.exe等程序通过代理上网： Name Resolution设置 【Profile】–&gt;【**Name Resolution…】, 记得要勾选Resolve hostnames through proxy，就是DNS解析也要通过代理 可以试一下了，不出意外还会出现什么git clone: SSL certificate problem: unable to get local issuer certificate错误的，还需要设置一下Git： 12git config --global http.sslVerify false# git config --list 3. 安装过程中的记录和警告 安装过程是很漫长的… … ，耐心等待安装完成，然后需要处理一下几个警告信息： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118time=\"2020-02-19T21:27:24+08:00\" level=warning msg=\"failed to create qtenv.bat symlink in your PATH (C:\\\\Go\\\\bin\\\\qtenv.bat); please use D:\\\\WebDev\\\\GoYard\\\\src\\\\github.com\\\\therecipe\\\\env_windows_amd64_513\\\\5.13.0\\\\mingw73_64\\\\bin\\\\qtenv2.bat instead\"time=\"2020-02-19T21:27:24+08:00\" level=info msg=\"running: 'qtsetup test windows' [docker=false] [vagrant=false]\"time=\"2020-02-19T21:27:24+08:00\" level=info msg=\"testing qml\\\\gallery\"time=\"2020-02-19T21:28:49+08:00\" level=info msg=\"testing quick\\\\calc\"time=\"2020-02-19T21:30:26+08:00\" level=info msg=\"testing widgets\\\\textedit\"time=\"2020-02-19T21:33:52+08:00\" level=warning msg=\"failed to create qtenv.bat symlink in your PATH (C:\\\\Go\\\\bin\\\\qtenv.bat); please use D:\\\\WebDev\\\\GoYard\\\\src\\\\github.com\\\\therecipe\\\\env_windows_amd64_513\\\\5.13.0\\\\mingw73_64\\\\bin\\\\qtenv2.bat instead\"time=\"2020-02-19T21:33:52+08:00\" level=info msg=\"running: 'qtsetup prep'\"time=\"2020-02-19T21:33:52+08:00\" level=warning msg=\"failed to create qtrcc symlink in your PATH (C:\\\\Go\\\\bin\\\\qtrcc.exe); please use D:\\\\WebDev\\\\GoYard\\\\bin\\\\qtrcc.exe instead\"time=\"2020-02-19T21:33:52+08:00\" level=warning msg=\"failed to create qtmoc symlink in your PATH (C:\\\\Go\\\\bin\\\\qtmoc.exe); please use D:\\\\WebDev\\\\GoYard\\\\bin\\\\qtmoc.exe instead\"time=\"2020-02-19T21:33:52+08:00\" level=warning msg=\"failed to create qtminimal symlink in your PATH (C:\\\\Go\\\\bin\\\\qtminimal.exe); please use D:\\\\WebDev\\\\GoYard\\\\bin\\\\qtminimal.exe instead\"time=\"2020-02-19T21:33:52+08:00\" level=warning msg=\"failed to create qtdeploy symlink in your PATH (C:\\\\Go\\\\bin\\\\qtdeploy.exe); please use D:\\\\WebDev\\\\GoYard\\\\bin\\\\qtdeploy.exe instead\"time=\"2020-02-19T21:33:52+08:00\" level=info msg=\"running: 'qtsetup check windows' [docker=false] [vagrant=false]\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"GOOS: 'windows'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"GOARCH: 'amd64'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"GOVERSION: 'go1.13.7'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"GOROOT: * 'C:\\\\Go'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"GOPATH: * 'D:\\\\WebDev\\\\GoYard'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"GOBIN: 'D:\\\\WebDev\\\\GoYard\\\\bin'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"GOMOD: ''\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_HASH: '5074eb6d8c41fdae5d1956af7c286160a40dd8fd'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_API: ''\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_VERSION: '5.13.0'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_DIR: * 'D:\\\\WebDev\\\\GoYard\\\\src\\\\github.com\\\\therecipe\\\\env_windows_amd64_513'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_STUB: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_DEBUG: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_QMAKE_DIR: ''\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_WEBKIT: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_STATIC: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_GEN_TSD: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_GEN_OPENGL: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_GEN_QUICK_EXTRAS: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_RESOURCES_BIG: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_NOT_CACHED: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_DEBUG_CONSOLE: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"QT_MSYS2: 'false'\"time=\"2020-02-19T21:33:53+08:00\" level=info msg=\"running: 'qtsetup generate windows' [docker=false] [vagrant=false]\"time=\"2020-02-19T21:34:52+08:00\" level=info msg=\"generating full qt/core\"time=\"2020-02-19T21:35:59+08:00\" level=info msg=\"generating full qt/androidextras\"time=\"2020-02-19T21:36:01+08:00\" level=info msg=\"generating full qt/gui\"time=\"2020-02-19T21:37:14+08:00\" level=info msg=\"generating full qt/network\"time=\"2020-02-19T21:37:35+08:00\" level=info msg=\"generating full qt/xml\"time=\"2020-02-19T21:37:42+08:00\" level=info msg=\"generating full qt/dbus\"time=\"2020-02-19T21:37:50+08:00\" level=info msg=\"generating full qt/nfc\"time=\"2020-02-19T21:37:54+08:00\" level=info msg=\"generating full qt/script\"time=\"2020-02-19T21:37:57+08:00\" level=info msg=\"generating full qt/sensors\"time=\"2020-02-19T21:38:23+08:00\" level=info msg=\"generating full qt/positioning\"time=\"2020-02-19T21:38:29+08:00\" level=info msg=\"generating full qt/widgets\"time=\"2020-02-19T21:42:22+08:00\" level=info msg=\"generating full qt/sql\"time=\"2020-02-19T21:42:32+08:00\" level=info msg=\"generating full qt/qml\"time=\"2020-02-19T21:42:41+08:00\" level=info msg=\"generating full qt/websockets\"time=\"2020-02-19T21:42:44+08:00\" level=info msg=\"generating full qt/xmlpatterns\"time=\"2020-02-19T21:42:47+08:00\" level=info msg=\"generating full qt/bluetooth\"time=\"2020-02-19T21:42:56+08:00\" level=info msg=\"generating full qt/webchannel\"time=\"2020-02-19T21:42:59+08:00\" level=info msg=\"generating full qt/svg\"time=\"2020-02-19T21:43:04+08:00\" level=info msg=\"generating full qt/multimedia\"time=\"2020-02-19T21:44:01+08:00\" level=info msg=\"generating full qt/quick\"time=\"2020-02-19T21:44:20+08:00\" level=info msg=\"generating full qt/help\"time=\"2020-02-19T21:44:37+08:00\" level=info msg=\"generating full qt/location\"time=\"2020-02-19T21:44:43+08:00\" level=info msg=\"generating full qt/scripttools\"time=\"2020-02-19T21:44:44+08:00\" level=info msg=\"generating full qt/uitools\"time=\"2020-02-19T21:44:45+08:00\" level=info msg=\"generating full qt/winextras\"time=\"2020-02-19T21:44:50+08:00\" level=info msg=\"generating full qt/testlib\"time=\"2020-02-19T21:44:51+08:00\" level=info msg=\"generating full qt/serialport\"time=\"2020-02-19T21:44:53+08:00\" level=info msg=\"generating full qt/serialbus\"time=\"2020-02-19T21:45:01+08:00\" level=info msg=\"generating full qt/printsupport\"time=\"2020-02-19T21:45:13+08:00\" level=info msg=\"generating full qt/designer\"time=\"2020-02-19T21:45:30+08:00\" level=info msg=\"generating full qt/scxml\"time=\"2020-02-19T21:45:36+08:00\" level=info msg=\"generating full qt/gamepad\"time=\"2020-02-19T21:45:39+08:00\" level=info msg=\"generating full qt/purchasing\"time=\"2020-02-19T21:45:41+08:00\" level=info msg=\"generating full qt/datavisualization [GPLv3]\"time=\"2020-02-19T21:45:54+08:00\" level=info msg=\"generating full qt/charts [GPLv3]\"time=\"2020-02-19T21:46:39+08:00\" level=info msg=\"generating full qt/virtualkeyboard [GPLv3]\"time=\"2020-02-19T21:46:45+08:00\" level=info msg=\"generating full qt/speech\"time=\"2020-02-19T21:46:47+08:00\" level=info msg=\"generating full qt/quickcontrols2\"time=\"2020-02-19T21:46:48+08:00\" level=info msg=\"generating full qt/sailfish\"time=\"2020-02-19T21:46:48+08:00\" level=info msg=\"generating full qt/remoteobjects\"time=\"2020-02-19T21:47:01+08:00\" level=info msg=\"running: 'qtsetup install windows' [docker=false] [vagrant=false]\"time=\"2020-02-19T21:47:01+08:00\" level=info msg=\"installing full qt/core\"time=\"2020-02-19T21:49:35+08:00\" level=info msg=\"installing full qt/androidextras\"time=\"2020-02-19T21:49:35+08:00\" level=info msg=\"installing full qt/gui\"time=\"2020-02-19T21:54:42+08:00\" level=info msg=\"installing full qt/network\"time=\"2020-02-19T21:54:42+08:00\" level=info msg=\"installing full qt/xml\"time=\"2020-02-19T21:54:53+08:00\" level=info msg=\"installing full qt/dbus\"time=\"2020-02-19T21:55:02+08:00\" level=info msg=\"installing full qt/nfc\"time=\"2020-02-19T21:55:11+08:00\" level=info msg=\"installing full qt/script\"time=\"2020-02-19T21:55:18+08:00\" level=info msg=\"installing full qt/sensors\"time=\"2020-02-19T21:55:34+08:00\" level=info msg=\"installing full qt/positioning\"time=\"2020-02-19T21:55:44+08:00\" level=info msg=\"installing full qt/widgets\"time=\"2020-02-19T22:04:21+08:00\" level=info msg=\"installing full qt/sql\"time=\"2020-02-19T22:04:35+08:00\" level=info msg=\"installing full qt/qml\"time=\"2020-02-19T22:04:36+08:00\" level=info msg=\"installing full qt/websockets\"time=\"2020-02-19T22:04:44+08:00\" level=info msg=\"installing full qt/xmlpatterns\"time=\"2020-02-19T22:04:52+08:00\" level=info msg=\"installing full qt/bluetooth\"time=\"2020-02-19T22:05:08+08:00\" level=info msg=\"installing full qt/webchannel\"time=\"2020-02-19T22:05:14+08:00\" level=info msg=\"installing full qt/svg\"time=\"2020-02-19T22:05:22+08:00\" level=info msg=\"installing full qt/multimedia\"time=\"2020-02-19T22:06:58+08:00\" level=info msg=\"installing full qt/quick\"time=\"2020-02-19T22:07:25+08:00\" level=info msg=\"installing full qt/help\"time=\"2020-02-19T22:07:46+08:00\" level=info msg=\"installing full qt/location\"time=\"2020-02-19T22:07:57+08:00\" level=info msg=\"installing full qt/scripttools\"time=\"2020-02-19T22:08:02+08:00\" level=info msg=\"installing full qt/uitools\"time=\"2020-02-19T22:08:07+08:00\" level=info msg=\"installing full qt/winextras\"time=\"2020-02-19T22:08:16+08:00\" level=info msg=\"installing full qt/testlib\"time=\"2020-02-19T22:08:22+08:00\" level=info msg=\"installing full qt/serialport\"time=\"2020-02-19T22:08:28+08:00\" level=info msg=\"installing full qt/serialbus\"time=\"2020-02-19T22:08:38+08:00\" level=info msg=\"installing full qt/printsupport\"time=\"2020-02-19T22:08:50+08:00\" level=info msg=\"installing full qt/designer\"time=\"2020-02-19T22:09:11+08:00\" level=info msg=\"installing full qt/scxml\"time=\"2020-02-19T22:09:20+08:00\" level=info msg=\"installing full qt/gamepad\"time=\"2020-02-19T22:09:28+08:00\" level=info msg=\"installing full qt/purchasing\"time=\"2020-02-19T22:09:33+08:00\" level=info msg=\"installing full qt/datavisualization [GPLv3]\"time=\"2020-02-19T22:10:10+08:00\" level=info msg=\"installing full qt/charts [GPLv3]\"time=\"2020-02-19T22:11:16+08:00\" level=info msg=\"installing full qt/virtualkeyboard [GPLv3]\"time=\"2020-02-19T22:11:27+08:00\" level=info msg=\"installing full qt/speech\"time=\"2020-02-19T22:11:34+08:00\" level=info msg=\"installing full qt/quickcontrols2\"time=\"2020-02-19T22:11:37+08:00\" level=info msg=\"installing full qt/sailfish\"time=\"2020-02-19T22:11:37+08:00\" level=info msg=\"installing full qt/remoteobjects\"time=\"2020-02-19T22:11:46+08:00\" level=info msg=\"installing full qt/internal/binding/runtime\" 记录挺长的，只关心warning信息： failed to create qtenv.bat symlink in your PATH (C:\\Go\\bin\\qtenv.bat); please use D:\\WebDev\\GoYard\\src\\github.com\\therecipe\\env_windows_amd64_513\\5.13.0\\mingw73_64\\bin\\qtenv2.bat instead failed to create qtrcc symlink in your PATH (C:\\Go\\bin\\qtrcc.exe); please use D:\\WebDev\\GoYard\\bin\\qtrcc.exe instead failed to create qtmoc symlink in your PATH (C:\\Go\\bin\\qtmoc.exe); please use D:\\WebDev\\GoYard\\bin\\qtmoc.exe instead failed to create qtminimal symlink in your PATH (C:\\Go\\bin\\qtminimal.exe); please use D:\\WebDev\\GoYard\\bin\\qtminimal.exe instead failed to create qtdeploy symlink in your PATH (C:\\Go\\bin\\qtdeploy.exe); please use D:\\WebDev\\GoYard\\bin\\qtdeploy.exe instead 基本就是安装过程中设置symlink失败了，安装提示手工设置一遍： 12345mklink %GOROOT%\\bin\\qtenv.bat %GOPATH%\\src\\github.com\\therecipe\\env_windows_amd64_513\\5.13.0\\mingw73_64\\bin\\qtenv2.batmklink %GOROOT%\\bin\\qtrcc.exe %GOPATH%\\bin\\qtrcc.exemklink %GOROOT%\\bin\\qtmoc.exe %GOPATH%\\bin\\qtmoc.exemklink %GOROOT%\\bin\\qtminimal.exe %GOPATH%\\bin\\qtminimal.exemklink %GOROOT%\\bin\\qtdeploy.exe %GOPATH%\\bin\\qtdeploy.exe 4. 其它让命令行通过代理上网的方法 cmd如果要设置代理的话，需要在执行其他命令之前，先执行一下： 12set http_proxy=http://127.0.0.1:7008set https_proxy=http://127.0.0.1:7008 cmder如果使用的是bash模式，则先执行一下： 12export http_proxy=http://127.0.0.1:7008export https_proxy=http://127.0.0.1:7008 PowerShell ： 12$env:http_proxy=http://127.0.0.1:7008$env:https_proxy=http://127.0.0.1:7008 上面命令的作用是设置环境变量，不用担心，这种环境变量只会持续到cmd窗口关闭，不是系统环境变量。 测试是否成功用 curl https://www.google.com, 别用ping命令，但是我测试是失败了的： 123curl: (35) schannel: next InitializeSecurityContext failed: SEC_E_ILLEGAL_MESSAGE (0x80090326) - This error usually occurs when a fatal SSL/TLS alert is received (e.g. handshake failed). More detail may be available in the Windows System event log. 该错误主要原因是系统支持的ssl/tls算法较老，导致握手失败，所以这个版本仅供参考，我是没试成功😂","link":"/categories/Others/proxifier/"},{"title":"腾讯会议的使用记录","text":"受2019新型冠状病毒（2019-nCoV）疫情影响，没法正常开课了，帮英语老师写的腾讯会议软件使用简明教程，经测试疫情期间免费的腾讯会议用来网络开会或上课还是能够胜任的。 腾讯会议使用帮助 1. 下载安装 去腾讯会议官网下载自己操作系统对应的版本安装，支持PC和手机、PAD终端，推荐用PC版本，方便分享桌面和PPT。 2. 发起会议 安装之后微信扫码登录，启动界面如下： 然后单击预定会议按钮，进入会议预定设置界面： 设置选项： 会议主题：默认是xxx发起的会议 开始时间和结束时间：预计会议开多久？ 会议人数上限：默认300，可以改为入会预计人数，如50 入会密码：访问控制，默认没有密码，可以设置 会议文档：可以提前准备要分享给参会人员的文档，也可以在进入会议室之后上传，因此这里可以不设置 会议设置：成员加入会议时自动静音，避免后续参加的人员麦克噪音影响正在进行的会议，可以设置 然后单击预定按钮即可了。 在随后弹出的对话框中，复制文本到微信或QQ群里面，或者单独发给你要求参会的人员，他们根据链接就能加入会议了： 3. 会议控制 主界面时自己的视频，如果你开启了摄像头，双击视频可以切换大小。默认为九宫格形式的，双击发言人的视频（如果他开了摄像头）就会切换为最大，右侧小图像或视频是其它入会成员。这里没法演示了，我建的时空白会议室，没人参加。 静音：关闭或打开，控制本地麦克风是否输入声音，发言的人要开启它。 开启视频：就是是否使用摄像头了，默认时关闭的。 共享屏幕： 这里就可以选择你要分享的桌面了，其实这里严格说时分享窗口，例如我可以选择分享PotPlayer视频播放器的播放内容，也可以分享其它任意窗口例如PPT放映窗口，桌面也是窗口的一种。但是不推荐直接分享桌面，分享窗口的话，你桌面上其它操作别人时看不到的。经测试发现分享的窗口不能隐藏，不能最小化。 邀请：邀请其它成员加入。 管理成员：可以控制成员静音，也可以踢掉不该入会的人。 聊天：这里可以聊天，效果一般。 会议文档：Word，Excel，PPT等文档分享，其它格式不支持 设置： 这个里面有个美颜功能对美女来说很重要，介绍一下：点击设置–&gt;进入设置窗口，点击Beta实验室，勾选背景虚化，可以调控制条，美颜效果也不要太重了，下面这种就很过了，对自己颜值不自信😂 结束会议按钮，会开完了，退出会议室。","link":"/categories/Others/meeting/"},{"title":"Hexo配置主题与插件","text":"本文记录如何配置Hexo的主题和插件。 目标主题： [x] icarus 博客插件： hexo-filter-mermaid-diagrams 一、安装主题hexo-theme-icarus 有了两种方法，任选其一： 去icarus的Github主页下载，解压后放置到博客根目录下的themes目录中(解压后的目录需要重命名为icarus) 在命令行中cd至博客根目录，安装主题： 1git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 二、基础配置 先要了解下Hexo博客的配置文件： 站点配置文件: 在博客根目录下的_config.yml文件 主题配置文件: 在主题/themes/icarus目录下的_config.yml文件 2.1 修改站点配置文件 打开博客根目录下的站点配置文件_config.yml，设置language和theme 在站点配置文件的第11行左右： 12# 每个主题设置的不一样，例如`bwm`主题这里设置的是zh-Hanslanguage: zh-CN 在站点配置文件的第76行左右： 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: icarus 2.2 修改主题配置文件 打开/themes/icarus目录下的主题配置文件，做如下配置： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231# Version of the Icarus theme that is currently usedversion: 2.6.0# Path or URL to the website's iconfavicon: /images/favicon.svg# Additional HTML meta tags in an array.meta: # canonical_url of your sitecanonical_url: # Path or URL to RSS atom.xmlrss: # Path or URL to the website's logo to be shown on the left of the navigation bar or footerlogo: /images/logo.svg# Open Graph metadata# https://hexo.io/docs/helpers.html#open-graphopen_graph: # Facebook App ID fb_app_id: # Facebook Admin ID fb_admins: # Twitter ID twitter_id: # Twitter site twitter_site: # Google+ profile link google_plus: # Navigation bar link settingsnavbar: # Navigation bar menu links menu: 主页: / 归档: /archives 分类: /categories 标签: /tags 友链: /friends 关于: /about # Navigation bar links to be shown on the right links: Download on GitHub: icon: fab fa-github url: 'https://github.com/hero/hexo-blog'# Footer section link settingsfooter: # Links to be shown on the right of the footer section links: Creative Commons: icon: fab fa-creative-commons url: 'https://creativecommons.org/' Attribution 4.0 International: icon: fab fa-creative-commons-by url: 'https://creativecommons.org/licenses/by/4.0/' Download on GitHub: icon: fab fa-github url: 'https://github.com/hero/hero.github.io'# Article display settingsarticle: # Code highlight settings highlight: # Code highlight themes # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: vs2015 # Show code copying button clipboard: false # Default folding status of the code blocks. Can be \"\", \"folded\", \"unfolded\" fold: unfolded # Whether to show article thumbnail images thumbnail: true # Whether to show estimate article reading time readtime: true# Search plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Searchsearch: # Name of the search plugin type: insight# Comment plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Commentcomment: # Name of the comment plugin type: # Donation entries# https://ppoffice.github.io/hexo-theme-icarus/categories/Donation/donate: - # Donation entry name type: alipay # Qrcode image URL qrcode: '/images/alipay-donate.png' - # Donation entry name type: wechat # Qrcode image URL qrcode: '/images/wx-donate.png'# Share plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Shareshare: # Share plugin name type: # Sidebar settings.# Please be noted that a sidebar is only visible when it has at least one widgetsidebar: # left sidebar settings left: # Whether the left sidebar is sticky when page scrolls # https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/ sticky: false # right sidebar settings right: # Whether the right sidebar is sticky when page scrolls # https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/ sticky: true# Sidebar widget settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/widgets: - # Widget name type: profile # Where should the widget be placed, left or right position: left # Author name to be shown in the profile widget author: herowuking # Title of the author to be shown in the profile widget author_title: Researcher # Author's current location to be shown in the profile widget location: Chongqing, China # Path or URL to the avatar to be shown in the profile widget avatar: '/images/avatar.png' # Email address for the Gravatar to be shown in the profile widget gravatar: # Whether to show avatar image rounded or square avatar_rounded: false # Path or URL for the follow button follow_link: 'https://github.com/hero' # Links to be shown on the bottom of the profile widget social_links: Github: icon: fab fa-github url: 'https://github.com/hero' Facebook: icon: fab fa-facebook url: 'https://facebook.com' Twitter: icon: fab fa-twitter url: 'https://twitter.com' Dribbble: icon: fab fa-dribbble url: 'https://dribbble.com' RSS: icon: fas fa-rss url: / - # 分类 type: category # Where should the widget be placed, left or right position: left - # 归档 type: archive # Where should the widget be placed, left or right position: left - # 标签 type: tag # Where should the widget be placed, left or right position: left - # 近期文章 type: recent_posts # Where should the widget be placed, left or right position: right - # 标签云 type: tagcloud # Where should the widget be placed, left or right position: right - # 目录 type: toc # Where should the widget be placed, left or right position: right# -# # 外部链接# type: links# # Where should the widget be placed, left or right# position: left# # Links to be shown in the links widget# links:# Google: 'https://google.com'# Baidu: 'https://baidu.com'# Other plugin settingsplugins: # Enable page animations animejs: true # Enable the lightGallery and Justified Gallery plugins # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/ gallery: true # Enable the Outdated Browser plugin # http://outdatedbrowser.com/ outdated-browser: true # Enable the MathJax plugin # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/ mathjax: true # Show the back to top button on mobile devices back-to-top: true # Google Analytics plugin settings # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics google-analytics: # Google Analytics tracking id tracking_id: # Baidu Analytics plugin settings # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics baidu-analytics: # Baidu Analytics tracking id tracking_id: # Hotjar user feedback plugin # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar hotjar: # Hotjar site id site_id: # Show a loading progress bar at top of the page progressbar: true # BuSuanZi site/page view counter # https://busuanzi.ibruce.info busuanzi: true# CDN provider settings# https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/providers: # Name or URL of the JavaScript and/or stylesheet CDN provider cdn: jsdelivr # Name or URL of the webfont CDN provider fontcdn: google # Name or URL of the webfont Icon CDN provider iconcdn: fontawesome 如上所示，我开启了不算子网站访问数量统计，因此需要修改一下/themes/icarus/layout/common/footer.ejs模板文件: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465&lt;footer class=&quot;footer&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;level&quot;&gt; &lt;div class=&quot;level-start has-text-centered-mobile&quot;&gt; &lt;a class=&quot;footer-logo is-block has-mb-6&quot; href=&quot;&lt;%- url_for(&apos;/&apos;) %&gt;&quot;&gt; &lt;% if (logo &amp;&amp; logo.text) { %&gt; &lt;%= logo.text %&gt; &lt;% } else { %&gt; &lt;img src=&quot;&lt;%- url_for(logo) %&gt;&quot; alt=&quot;&lt;%= title %&gt;&quot; height=&quot;28&quot;&gt; &lt;% } %&gt; &lt;/a&gt; &lt;p class=&quot;is-size-7&quot;&gt; &amp;copy; &lt;%= date(new Date(), &apos;YYYY&apos;) %&gt; &lt;%= author || title %&gt;&amp;nbsp; Powered by &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; &amp; &lt;a href=&quot;https://github.com/ppoffice/hexo-theme-icarus&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Icarus&lt;/a&gt; &lt;/p&gt; &lt;/div&gt; &lt;!-- 新增网站运行时长统计 --&gt; &lt;div class=&quot;level-middle&quot;&gt; &lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt; &lt;script&gt; var now = new Date(); function createtime() { var grt= new Date(&quot;1/26/2019 17:00:00&quot;);//此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 ){hnum = &quot;0&quot; + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = &quot;0&quot; + mnum;} seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 ){snum = &quot;0&quot; + snum;} document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; } setInterval(&quot;createtime()&quot;,250); &lt;/script&gt; &lt;% if (busuanzi) { %&gt; &lt;br&gt; &lt;span id=&quot;busuanzi_container_site_pv&quot; style=&apos;display:none&apos;&gt; 总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot; style=&apos;color:#830026&apos;&gt;0&lt;/span&gt;次 &lt;/span&gt; &lt;% } %&gt; &lt;/div&gt; &lt;!-- 新增内容结束 --&gt; &lt;div class=&quot;level-end&quot;&gt; &lt;% if (Object.keys(links).length) { %&gt; &lt;div class=&quot;field has-addons is-flex-center-mobile has-mt-5-mobile is-flex-wrap is-flex-middle&quot;&gt; &lt;% for (let name in links) { let link = links[name]; %&gt; &lt;p class=&quot;control&quot;&gt; &lt;a class=&quot;button is-white &lt;%= typeof(link) !== &apos;string&apos; ? &apos;is-large&apos; : &apos;&apos; %&gt;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; title=&quot;&lt;%= name %&gt;&quot; href=&quot;&lt;%= url_for(typeof(link) === &apos;string&apos; ? link : link.url) %&gt;&quot;&gt; &lt;% if (typeof(link) === &apos;string&apos;) { %&gt; &lt;%= name %&gt; &lt;% } else { %&gt; &lt;i class=&quot;&lt;%= link.icon %&gt;&quot;&gt;&lt;/i&gt; &lt;% } %&gt; &lt;/a&gt; &lt;/p&gt; &lt;% } %&gt; &lt;/div&gt; &lt;% } %&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/footer&gt; 2.3 效果预览 更换一下/themes/icarus/source/images里面的素材文件。然后本地预览一下，基本样子就有了： 三、高级配置 3.1 优化屏幕元素默认宽度 icarus 主题采用了 Bulma 框架，实现布局的自适应。Bulma 将一块屏幕横向分成12列，页面中元素各取所需共同分割这12列。 icarus主题默认的文章显示区域个人觉得略窄，需要修改源代码。 首先，我们找到 icarus 主题设置 Widget 和 Post 宽度的代码： /themes/icarus/layout/common/widget.ejs 1234567switch (column_count()) { case 2: return &apos;is-4-tablet is-4-desktop is-4-widescreen&apos;; case 3: return &apos;is-4-tablet is-4-desktop is-3-widescreen&apos;;}return &apos;&apos;; /themes/icarus/layout/layout.ejs 123456789switch (column_count()) { case 1: return &apos;is-12&apos;; case 2: return &apos;is-8-tablet is-8-desktop is-8-widescreen&apos;; case 3: return &apos;is-8-tablet is-8-desktop is-6-widescreen&apos;;}return &apos;&apos;; icarus 可以设置资料、toc、归档等等Widget在文章的左侧或者右侧。也就是说，包括Widget和文章在内，列数在1~3列不等： 无Widget的时候，为1列； Widget统一在左侧或右侧时，为2列； Widget左、右侧都有时，为3列。 Bulma 引擎将屏幕横向分为12份，所有元素按照自己的需求使用即可。 通过 widget.ejs 文件，我们可以看到，对于插件而言： 如果屏幕分为2列，则插件的宽度为 is-4-widescreen，也即是4/12=33.33%的宽度； 如果屏幕分为3列，则插件的宽度为 is-3-widescreen，也即是3/12=25%的宽度，两列插件占了50%宽。 同样的，layout.ejs 文件针对文章也做了宽度限制： 如果屏幕分为1列，则文章的宽度为 is-12，也即是12/12=100%的宽度； 如果屏幕分为2列，则文章的宽度为 is-8-widescreen，也即是8/12=66.66%的宽度； 如果屏幕分为3列，则文章的宽度为 is-6-widescreen，也即是6/12=50%的宽度。 那么调整插件宽度的方法也就差不多想出来啦！修改代码如下： /themes/icarus/layout/common/widget.ejs 1234567switch (column_count()) { case 2: return 'is-4-tablet is-4-desktop is-3-widescreen'; case 3: return 'is-4-tablet is-4-desktop is-2-widescreen';}return ''; /themes/icarus/layout/layout.ejs 123456789switch (column_count()) { case 1: return 'is-12'; case 2: return 'is-8-tablet is-8-desktop is-9-widescreen'; case 3: return 'is-8-tablet is-8-desktop is-8-widescreen';}return ''; 要注意的是对应column的数量和是12，如果是三列就是2*Widget_width+main_width，如果是两列就是Widght_width+main_width。 还可以通过修改/themes/icarus/source/css/style.styl文件中的@media screen样式如下： 123456789101112@media screen and (min-width: screen-widescreen) .is-1-column .container .is-2-column .container max-width: screen-desktop - 1.5 * gap width: screen-desktop - 1.5 * gap@media screen and (min-width: screen-fullhd) .is-2-column .container max-width: screen-widescreen - 1.5 * gap width: screen-widescreen - 1.5 * gap .is-1-column .container max-width: screen-desktop - 2 * gap width: screen-desktop - 2 * gap 3.2 页面详情与首页布局分栏的不同设置 icarus主题的主页默认是三栏设置的，左右两侧都有Widget，参考作者主页示例。 如何点击文章进入文章详情页面的时候变为左右两栏设置呢？参考Profile Sidebar Widget。 没有找到通过修改主题配置文件就能实现的方法，依然是需要修改源码的： /themes/includes/helpers/layout.js 1234567891011121314diff --git a/includes/helpers/layout.js b/includes/helpers/layout.jsindex 7fd6c07..6bfd0b3 100644--- a/includes/helpers/layout.js+++ b/includes/helpers/layout.js@@ -32,6 +32,9 @@ module.exports = function (hexo) { hexo.extend.helper.register('column_count', function () { let columns = 1;+ if (this.page.__post === true || this.page.__page === true) {+ return 2;+ } const hasColumn = hexo.extend.helper.get('has_column').bind(this); columns += hasColumn('left') ? 1 : 0; columns += hasColumn('right') ? 1 : 0; /themes/icarus/layout/common/widget.ejs 123456789101112131415diff --git a/layout/common/widget.ejs b/layout/common/widget.ejsindex 9f58bd5..c6b267c 100644--- a/layout/common/widget.ejs+++ b/layout/common/widget.ejs@@ -25,7 +25,7 @@ &lt;%- partial('widget/' + widget.type, { widget, post: page }) %&gt; &lt;% }) %&gt; &lt;% if (position === 'left') { %&gt;- &lt;div class=\"column-right-shadow is-hidden-widescreen &lt;%= sticky_class('right') %&gt;\"&gt;+ &lt;div class=\"column-right-shadow &lt;%= (page.__page !== true &amp;&amp; page.__post !== true) ? 'is-hidden-widescreen' : '' %&gt; &lt;%= sticky_class('right') %&gt;\"&gt; &lt;% get_widgets('right').forEach(widget =&gt; {%&gt; &lt;%- partial('widget/' + widget.type, { widget, post: page }) %&gt; &lt;% }) %&gt;diff --git a/layout/layout.ejs b/layout/layout.ejsindex cf7be87..b76c9e6 100644 /themes/icarus/layout/layout.ejs 1234567891011121314diff --git a/layout/layout.ejs b/layout/layout.ejsindex cf7be87..b76c9e6 100644--- a/layout/layout.ejs+++ b/layout/layout.ejs@@ -21,7 +21,9 @@ &lt;div class=\"columns\"&gt; &lt;div class=\"column &lt;%= main_column_class() %&gt; has-order-2 column-main\"&gt;&lt;%- body %&gt;&lt;/div&gt; &lt;%- partial('common/widget', { position: 'left' }) %&gt;+ &lt;% if (page.__page !== true &amp;&amp; page.__post !== true) { %&gt; &lt;%- partial('common/widget', { position: 'right' }) %&gt;+ &lt;% } %&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; 3.3 在详情页面动态隐藏Widgets 上面提到过如何在page和post页面显示两栏，在首页显示三栏，我们可以判断当前的columns(几栏)来做不同的逻辑操作，有两种方法实现在两栏的时候隐藏部分侧边组件。 方法一：例如想取掉 tagclound widget,在 tagcloud.ejs 中添加判断是否是page或者post 123456789101112+ &lt;% if (page.__page !== true &amp;&amp; page.__post !== true) { %&gt;&lt;% if (site.tags.length) { %&gt;&lt;div class=&quot;card widget&quot;&gt; &lt;div class=&quot;card-content&quot;&gt; &lt;h3 class=&quot;menu-label&quot;&gt; &lt;%= __(&apos;widget.tag_cloud&apos;) %&gt; &lt;/h3&gt; &lt;%- tagcloud() %&gt; &lt;/div&gt;&lt;/div&gt;&lt;% } %&gt;+ &lt;% } %&gt; 方法二：在 layout/common/widget.ejs 中判断如果widget是不是tag组件。 1234567891011121314&lt;div class=&quot;column &lt;%= side_column_class() %&gt; &lt;%= visibility_class() %&gt; &lt;%= order_class() %&gt; column-&lt;%= position %&gt; &lt;%= sticky_class(position) %&gt;&quot;&gt; &lt;% get_widgets(position, column_count()).forEach(widget =&gt; {%&gt; &lt;%- partial(&apos;widget/&apos; + widget.type, { widget, post: page }) %&gt; &lt;% }) %&gt; &lt;% if (position === &apos;left&apos;) { %&gt; &lt;div class=&quot;column-right-shadow &lt;%= (page.__page !== true &amp;&amp; page.__post !== true) ? &apos;is-hidden-widescreen&apos; : &apos;&apos; %&gt; &lt;%= sticky_class(&apos;right&apos;) %&gt;&quot;&gt;- &lt;% get_widgets(&apos;right&apos;, column_count()).forEach(widget =&gt; {%&gt;+ &lt;% get_widgets(right, column_count()).forEach(widget =&gt; { if(widget.type !== &apos;tag&apos;){%&gt; &lt;%- partial(&apos;widget/&apos; + widget.type, { widget, post: page }) %&gt;- &lt;% }) %&gt;+ &lt;% }}) %&gt; &lt;/div&gt; &lt;% } %&gt;&lt;/div&gt; 3.4 设置thumbnail图片、目录 主题配置文件中，开启图片开关： 12article: thumbnail: true 主题配置文件中，设置toc： 1234widgets: - type: toc position: right 这里有个小技巧：目录在文章详情页面是显示在左边的，但是这里却设置为right，因为上面修改了文章详情页为两栏显示，那么右边的Widgets就会在左侧显示，只要没有隐藏，只要还有空间。为啥没有直接设置为left呢，因为我设置了右侧的Widgets为sticky，这样当文章很长的时候，目录会在顶部显示，不会随页面下拉滚动。 然后每个md文件的头部设置thumbnail图片的相对或绝对地址，同时要生成目录，需要设置toc为true。例如： 1234567891011121314151617title: Hexo配置主题与插件categories: Hexodate: 2020-02-02 12:45:30toc: truethumbnail: /categories/Hexo/custom-icarus-theme/custom-hexo-theme-thumbnail.pngtags: - hexo - theme - hexo-theme-icarus - plugins---本文记录如何配置`Hexo`的主题和插件。&lt;!-- 以上是摘要 --&gt;&lt;!-- more --&gt;&lt;!-- 以下是正文 --&gt;正文开始... 另外，在主页显示图片就可以了，在文章详情页面不想看到图片，感觉有点花。那么需要修改themes/icarus/layout/common/article.ejs 1234567891011121314151617&lt;!-- 图片显示的地方，添加条件判断 --&gt;- &lt;% if (has_thumbnail(post)) { %&gt;+ &lt;% if (has_thumbnail(post) &amp;&amp; page.__post !== true) { %&gt;&lt;!-- 让摘要文字显示更紧凑一些 --&gt;- &lt;div class=&quot;content&quot;&gt;- &lt;%- index &amp;&amp; post.excerpt ? post.excerpt : post.content %&gt;- &lt;/div&gt; + &lt;% if(index &amp;&amp; post.excerpt) { %&gt; + &lt;%- post.excerpt %&gt;+ &lt;% } else { %&gt;+ &lt;div class=&quot;content&quot;&gt;+ &lt;%- post.content %&gt;+ &lt;/div&gt;+ &lt;% } %&gt;&lt;!-- 阅读更多 按钮改为dark深色的 --&gt;- &lt;a class=&quot;button is-size-7 is-light&quot; href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;%= __(&apos;article.more&apos;) %&gt;&lt;/a&gt;+ &lt;a class=&quot;button is-size-7 is-dark&quot; href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;%= __(&apos;article.more&apos;) %&gt;&lt;/a&gt; 3.5 设置评论系统 博客必须的有评论的功能。参考主题icarus评论系统的官方帮助： 我打算使用的是Valine Comment Plugin 修改主题配置文件: 1234567comment: type: valine app_id: xxxxxxxx # (required) LeanCloud application id app_key: xxxxxxxx # (required) LeanCloud application key notify: false # (optional) receive email notification verify: false # (optional) show verification code placeholder: xxxxxxxx # (optional) comment box placeholder text 首先，需要注册LeanCloud，我以前注册过，而且已经创建了一个应用hexo-blog。直接登录到hexo-blog应用管理后台，然后参考Valine quick start设置获得APP ID 和 APP Key，然后填到上面就可以了。 但是在评论下方有提示说：“Code 504: The app is archived, please restore in console before use.” 到管理后台restore重新激活应用提示要实名认证，看来是当初注册的时候没有实名认证（那时不需要）。实名认证之后，重新激活应用，等待了大约两分钟，评论功能正常了： 四、Hexo插件配置 4.1 流程图插件 Hexo流程图推荐使用Mermaid：hexo-filter-mermaid-diagrams 首先是安装插件了： 1npm install --save hexo-filter-mermaid-diagrams 修改主题配置文件_config.yml，在最后添加： 12345678# -----------------------------------------------------# Custom config# hexo-filter-mermaid-diagrams: https://github.com/webappdevelp/hexo-filter-mermaid-diagramsmermaid: ## mermaid url https://github.com/knsv/mermaid enable: true # default true version: \"7.1.2\" # default v7.1.2 options: # find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js #startOnload: true // default true 在/themes/icarus/layout/common/head.ejs中添加： 12345678&lt;% if (theme.mermaid.enable) { %&gt; &lt;script src=&apos;https://unpkg.com/mermaid@&lt;%= theme.mermaid.version %&gt;/dist/mermaid.min.js&apos;&gt;&lt;/script&gt; &lt;script&gt; if (window.mermaid) { mermaid.initialize({theme: &apos;forest&apos;}); } &lt;/script&gt;&lt;% } %&gt; 4.2 多媒体播放插件 对于音乐播放，安装插件hexo-tag-aplayer，然后配置一下即可： 1npm install --save hexo-tag-aplayer 然后在markdown文档里面插入音乐的格式语法如下： 1{% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %} 除了开头关键字aplayer，大括号里面的其它参数都要用双引号包括起来。 title : music title author: music author url: music file url picture_url: optional, music picture url narrow: optional, narrow style autoplay: optional, autoplay music, not supported by mobile browsers width:xxx: optional, prefix width:, player’s width (default: 100%) lrc:xxx: optional, prefix lrc:, LRC file url 使用hexo-tag-aplayer就是要找到音乐的真实地址，推荐个全网音乐免费下载工具，例如我搜了刀郎的西海情歌： 1{% aplayer &quot;西海情歌&quot; &quot;刀郎&quot; &quot;http://nu01.sycdn.kuwo.cn/cbcd352abcf53d0538b87cbc18770851/5e59b7c5/resource/n2/98/33/2292977948.mp3&quot; &quot;http://img3.kuwo.cn/star/starheads/120/4/6e36dbaa5bdc4fe424963901b3715d1_0.jpg&quot; &quot;autoplay&quot; %} 如果有歌词，可以在上面的语句中添加lrc: LRC歌词地址，可惜这首西海情歌没有歌词。 var ap = new APlayer({ element: document.getElementById(\"aplayer-PqkHkYeL\"), narrow: false, autoplay: true, showlrc: false, music: { title: \"西海情歌\", author: \"刀郎\", url: \"http://nu01.sycdn.kuwo.cn/cbcd352abcf53d0538b87cbc18770851/5e59b7c5/resource/n2/98/33/2292977948.mp3\", pic: \"http://img3.kuwo.cn/star/starheads/120/4/6e36dbaa5bdc4fe424963901b3715d1_0.jpg\", lrc: \"\" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 还有一种内嵌歌词的书写格式（不常用）： 123{% aplayerlrc \"title\" \"author\" \"url\" \"autoplay\" %}[00:00.00]lrc here{% endaplayerlrc %} 播放列表： 123456789101112131415161718192021222324252627{% aplayerlist %}{ \"narrow\": false, // Optional, narrow style \"autoplay\": true, // Optional, autoplay song(s), not supported by mobile browsers \"mode\": \"random\", // Optional, play mode, can be `random` `single` `circulation`(loop) `order`(no loop), default: `circulation` \"showlrc\": 3, // Optional, show lrc, can be 1, 2, 3 \"mutex\": true, // Optional, pause other players when this player playing \"theme\": \"#e6d0b2\", // Optional, theme color, default: #b7daff \"preload\": \"metadata\", // Optional, the way to load music, can be 'none' 'metadata' 'auto', default: 'auto' \"listmaxheight\": \"513px\", // Optional, max height of play list \"music\": [ { \"title\": \"CoCo\", \"author\": \"Jeff Williams\", \"url\": \"caffeine.mp3\", \"pic\": \"caffeine.jpeg\", \"lrc\": \"caffeine.txt\" }, { \"title\": \"アイロニ\", \"author\": \"鹿乃\", \"url\": \"irony.mp3\", \"pic\": \"irony.jpg\" } ]}{% endaplayerlist %} var options = {\"narrow\":false,\"autoplay\":true,\"showlrc\":3,\"mode\":\"random\",\"mutex\":true,\"theme\":\"#e6d0b2\",\"preload\":\"metadata\",\"listmaxheight\":\"513px\",\"music\":[{\"title\":\"花儿为什么这样红\",\"author\":\"刀郎\",\"url\":\"http://win.web.ra01.sycdn.kuwo.cn/6a6346dffd63475b25c9e453b6580ba9/5e5a15b3/resource/n3/94/35/2962963086.mp3\",\"pic\":\"http://p1.music.126.net/l4ezrBVqBuXRl7TquLsG7Q==/45079976739601.jpg\",\"lrc\":\"/categories/Hexo/custom-icarus-theme/花儿为什么这样红-刀郎.lrc\"},{\"title\":\"关山酒\",\"author\":\"等什么君\",\"url\":\"http://m10.music.126.net/20200229163820/44993fc11d4c5ef6ba4c0134444e2575/ymusic/5409/5158/025b/cc5945120af2295af4f051f44fc9981d.mp3\",\"pic\":\"http://p2.music.126.net/TzhBcIpEldkML6hvYKtzsQ==/109951164333017222.jpg\",\"lrc\":\"/categories/Hexo/custom-icarus-theme/关山酒-等什么君.lrc\"},{\"title\":\"我们都是无名之辈\",\"author\":\"解忧邵帅\",\"url\":\"http://m10.music.126.net/20200229161223/46e0fe20ee3d6b66941bf3c8ca8b4afd/ymusic/565e/060e/530e/a43299700f1d1d3308d9dd24946549f6.mp3\",\"pic\":\"http://p2.music.126.net/wGBs48dBWC-eCdYTp7B0sw==/109951164060830676.jpg\",\"lrc\":\"/categories/Hexo/custom-icarus-theme/我们都是无名之辈-解忧邵帅.lrc\"}]}; options.element = document.getElementById(\"aplayer-nYBRHodO\"); var ap = new APlayer(options); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 使用本地歌词: 例如，我用的主题icarus，当前页面相对于主域名的路径为/categories/Hexo/custom-icarus-theme/，因此我将歌词下载到了和本页面需要加载图片的相同位置，然后lrc歌词路径就参考图片路径写法了： “lrc”: “/categories/Hexo/custom-icarus-theme/花儿为什么这样红-刀郎.lrc” 由于本页面使用了APlayer，在页面加载的时候出现了DOMException： 1DOMException: \"The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\" 所以，导致目录链接失效了！ MeingJS支持 对于hexo-tag-aplyer插件，如果你想开启MetingJS支持，那么就要修改博客根目录下的站点配置文件： 12345aplayer: cdn: https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js # 引用 APlayer.js 外部 CDN 地址 (默认不开启) style_cdn: https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css # meting: true # MetingJS 支持 # meting_cdn: https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js # 引用 Meting.js 外部 CDN 地址 (默认不开启) 个人觉得这个功能有点鸡肋，虽然书写格式简短了点，但是不灵活，很多其它网站的音乐没法添加了。所以，我注释掉了meting相关的行，没有添加MeingJS支持！ 4.3 高级渲染插件 默认的Hexo是无法渲染标签符号的，在Typora中编辑显示很好的标签符号😂，经Hexo编译输出后默认还是文本:joy:。 解决办法就是更换一下Hexo默认的渲染引擎了： 12npm un hexo-renderer-marked --savenpm i hexo-renderer-markdown-it-plus --save 然后在站点配置文件里面添加如下配置： 12345678910markdown_it_plus: highlight: true html: true xhtmlOut: true breaks: true langPrefix: linkify: true typographer: quotes: “”‘’ pre_class: highlight 更多参考：hexo-renderer-markdown-it-plus 参考： hexo-theme-icarus document Easy Hexo: hexo-theme-icaus https://hexo.io/plugins/ Hexo | 初识icarus主题中的Bulma框架 博客更换ICARUS主题 更换icarus主题记录","link":"/categories/Hexo/custom-icarus-theme/"},{"title":"动手搭建基于Hexo的个人博客","text":"本文从零开始记录如何基于Hexo、Github、Coding.net、Travis CI搭建自己的个人博客。 0. 整体思路 一种方法是，利用hexo deploy一键自动部署到Github Pages和Coding Pages（个人推荐这种方法）。手动一键部署命令也很简单hexo d 另外，本地生成静态文件命令: hexo g 本地开启hexo服务浏览：hexo s，若要指定端口(有时候默认端口4000本地冲突了)就用命令hexo s -p 5000 还有一种逼格更高的，是利用Travis CI自动同步部署： 参考基于 Travis CI 实现 Hexo 在 Github 和 Coding 的同步部署，整体部署思路如下图所示： 注意: 这里的Git仓储有3个： graph LR G0(1.Source github repo) --> Auto{Auto Deploy} Auto --> |Yes| TravisCI[Travis CI] Auto --> |No| Manual[Manual Deploy] TravisCI --> Gp[2.Github pages repo] TravisCI --> Cp[3.Coding pages repo] Manual --> Gp Manual --> Cp 1.Source github repo: 用来存储源文件(Private) 2.Github pages repo: Github pages 仓储(Public)，存储hexo部署后生成的静态网页文件; 3.Coding pages repo: 功能同上，是腾讯的国内Git仓储，方便国内访问。 如果不使用Travis CI自动部署，那么就是使用命令hexo d命令手工部署, 如果配置了Travis CI自动部署，那么就是直接推送修改后的源代码到Source github repo即可，Travis CI会自动执行hexo部署，生成静态网页文件后自动推送到Github pages repo和Coding pages repo。 Github 和 Coding 都能提供静态页面托管服务，利用 Travis CI 自动构建或hexo d一键部署 Hexo 博客的静态页面文件，推送到 Github Pages 和 Coding Pages 仓储所在的 master 分支。 1. 搭建本地可以访问的 Hexo 博客 Hexo博客的本地安装和构建非常简单： 确认你的电脑上已经安装了Node.js和Git for windows 假设你想把你的本地 Hexo 博客放置在 D 盘根目录下，那么就在 D 盘单击鼠标右键–&gt;Git bash here 123456npm install hexo-cli -ghexo init hexo-blogcd hexo-blognpm installhexo g # hexo generatehexo s # hexo server 这些基础操作，请参考Hexo 官方文档 然后，就要选择自己喜欢的主题了，我选用的这款主题是BWM，一切操作参考官方文档。 2. 注册Github, 新建仓储 Github 的注册和仓储的创建很容易，这点相信玩 Github 的都会了。 需要注意的一点就是： 为了让 Github Pages 访问域名尽可能的简短，Repository 的名称格式为username.github.io Repository 必须为public的，而且不要勾选Initilize this repository with a README 参考如下： 3. 注册Coding，新建仓储 GitHub 是国外知名的 Git 仓储，但是 GitHub 不允许百度爬虫访问，为了 Blog 文章能被百度搜索引擎访问，我们同时要将博客托管到国内的 Coding，Coding现在被腾讯收了，所以注册登录之后就是腾讯开发者平台，这点没影响，登录可以使用微信了，反而方便。 注册和创建仓储方法跟在 Github 类似，注意点也相同，在此不再赘述。 4. 创建 SSH 密钥，私人访问令牌 Git操作如果你不想每次都输入登录信息，那么就要利用 SSH 密钥文件了。 由于我的Github和Coding的登录用户名和邮箱不一样，所以我这里创建了 2 遍： 4.1 为 Github 创建 SSH 密钥文件，私人访问令牌 1234git config --global user.name \"hero\"git config --global user.email \"herowuking@qq.com\"ssh-keygen -t rsa -C \"herowuking@qq.com\"# 上面命令回车后，请注意看提示! 文件名我输入`github`，passphrase留空 得到的私钥文件为github，公钥文件为github.pub 然后，登录 Github，在 Personal settings 中，将`github.pub`*（公钥）*文件中的内容添加进去： 12345git config --global user.name \"hero\"git config --global user.email \"herowuking@qq.com\"# 测试SSH连接Githubssh -T git@github.comHi hero! You've successfully authenticated, but GitHub does not provide shell access. 登录 Github，点击右上角个人图标，选择Settings–&gt;Developer settings–&gt;Peronal access tokens，新建一个私人访问令牌，勾选repo，然后Generate Token，得到一个字符串，这需要赶紧记下来的，一会儿你就看不到它！ 4.2 为 Coding 创建 SSH 密钥文件，私人访问令牌 1234git config --global user.name \"wuking\"git config --global user.email \"wuying283@qq.com\"ssh-keygen -t rsa -C \"wuying283@qq.com\"# 上面命令回车后，请注意看提示! 文件名我输入`coding`，passphrase留空 得到的私钥文件为coding，公钥文件为coding.pub 同理，登录`腾讯开发者平台`，在`个人设置`中将coding.pub中的公钥字符串，添加到Coding的`SSH公钥`中： PS： 由于我这两个邮箱都在腾讯开发者平台注册了，所以github.pub文件中的字符串我也添加到了这个 Repository 中，同时将这个邮箱添加为了项目成员。 123456git config --global user.name \"hero\"git config --global user.email \"herowuking@qq.com\"# 测试ssh -T git@git.dev.tencent.comCoding 提示: Hello wuking, You've connected to Coding.net via SSH. This is a personal key.wuking，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥 登录腾讯开发者平台，在个人设置的访问令牌中，新建一个令牌，随便取个名字如Travis_CI_Depot，勾选权限project:depot，新建令牌，得到一个字符串。一定要赶紧记下来！，一会儿你就看不到它了。 5. 配置 Hexo，Push 到 Github 的 blog 分支 Hexo 的配置文件是本地 Blog 中的_config.yml 文件： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Herowuking's Blogsubtitle:description: 无影的天空keywords:author: herowukinglanguage: zh-Hanstimezone: Asia/Chongqing# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://hero.github.ioroot: /permalink: passages/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: truerelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace:# Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: \"\" per_page: 20 order_by: -date# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 20pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: bmw# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: github: git@github.com:hero/hero.github.io.git coding: git@git.dev.tencent.com:wuking/wuking.coding.me.git branch: master message: 在 D:/hexo-blog 目录中，单击鼠标右键，选择Git bash here： 12345git initgit add -Agit commit -m \"first commit\"git remote add origin git@github.com:hero/hero.github.io.gitgit push -u origin master:blog 登录 Github 检测效果： 6. 配置 Travis CI，再次 Push 登录 Travis CI，使用 Github 账号授权登录。然后开启 hexo 博客仓储的开关，点击Settings按钮设置全局变量： 用步骤 4.1创建的私人访问令牌创建一个全局变量 GI_TOKEN，用步骤 4.2创建的私人访问令牌创建另一个全局变量 CO_TOKEN，这两个变量后面.travis.yml 配置文件中要用到。 在本地 Blog 的根目录中创建一个.travis.yml 配置文件，内容如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152language: node_jsnode_js: - \"10\"cache: apt: true directories: - node_modules# S: Build Lifecycleinstall: - npm install hexo-cli -g - npm install hexo --save - npm installscript: - hexo clean - hexo gafter_script: - cp ./README.md ./public/README.md - cd ./public - git init - git config user.name \"hero\" - git config user.email \"herowuking@qq.com\" - git add . - git commit -m \"Update Blog By TravisCI With Build $TRAVIS_BUILD_NUMBER\" - git tag -a v0.0.$TRAVIS_BUILD_NUMBER -m \"Auto Taged By TravisCI With Build $TRAVIS_BUILD_NUMBER\" # Github Pages - git push --force --quiet \"https://${GI_TOKEN}@${GI_REF}\" master:master # Github Pages tags - git push --quiet \"https://${GI_TOKEN}@${GI_REF}\" master:master --tags # Change login user info - git config user.name \"wuking\" - git config user.email \"wuying283@qq.com\" # Coding Pages - git push --force --quiet \"https://wuking:${CO_TOKEN}@${CO_REF}\" master:master # Coding Pages tags - git push --quiet \"https://wuking:${CO_TOKEN}@${CO_REF}\" master:master --tags# E: Build LifeCyclebranches: only: - blogenv: global: # Github Pages - GI_REF: github.com/hero/hero.github.io.git # Coding Pages - CO_REF: git.dev.tencent.com/wuking/wuking.coding.me.git 再次 Push： 123git add .travis.yml # 如果你不确认有哪些文件修改了，请使用 `git add -A`命令git commit -m \"Add .travis.yml\"git push -u origin master:blog 7. 开启 Github 和 Coding 的 Pages 服务，检阅效果 分别登录Github和Coding，查看 master 分支下是否有注释为Update Blog By TravisCI With Build xxx字样的推送，如果没有检查 Travis CI 的日志，以及上面的配置是否有误，确认看到了 Travis CI 的自动推送之后，就可以分别在项目设置里面，开启 Pages 服务了。 Github Pages 默认是开启的，只要你的 Repository 名称是usename.github.io格式，而且 master 分支里面不为空，有静态页面文件存在即可。 Coding Pages 需要手工开启Pages 服务。 8. 使用hexo deploy一键自动部署 Travis CI只是显得逼格较高而已，对于Hexo发布博客来讲，有点鸡肋。 有些主题会让你发现本地浏览没问题，Travis CI构建的反而有问题~ 在_config.yml 文件文件中配置好deploy 123456789# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: github: git@github.com:hero/hero.github.io.git coding: git@git.dev.tencent.com:wuking/wuking.coding.me.git branch: master message: 然后就可以在Git bash命令行中一键部署了： 1hexo clean &amp; hexo deploy 个人认为这种操作更方便，而且本地浏览没问题，部署就不会有问题！ 但是，如果你想多地编辑 Hexo 博客的话，源文件还是要发布到 Git 远程仓储上。 9. 其它设置&amp;技巧 9.1 增加文章置顶功能 首先，要知道通过hexo new &quot;title&quot;命令新建的文章，都是以./scaffolds/post.md为模板的。 我将post.md修改如下： 123456789101112---title: { { title } }date: { { date } }categories: 未分类tags: - defaulttop:---&lt;!-- 以上是摘要 --&gt;&lt;!-- more --&gt;&lt;!-- 以下是正文 --&gt; 文章置顶有插件支持： 12npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save 然后，只要在需要置顶的文章的Front-matter中加上top: true属性即可。比如下面这篇文章： 12345678---title: 欢迎光临寒舍categories: 未分类tags: - defaultdate: 2019-01-24 20:19:50top: true--- 到此，文章已经置顶了，下面修改主题目录下的&quot;.\\themes\\bmw\\layout\\index.ejs&quot;文件，在文件约59行下插入如下语句： 12345&lt;div class=&quot;article-meta pull-left&quot;&gt;&lt;!--原文第59行--&gt;&lt;!-- 添加置顶标志 --&gt;&lt;% if(psg.top) { %&gt; &lt;font color=#A52A2A&gt;【置顶】&lt;/font&gt;&lt;% } %&gt; 9.2 发布自带图片的文章 我们都知道，在Markdown里面，图片的引用是： 1![图片alt](图片地址''图片title'') 例如： 1![I:love:markdown](https://s2.ax1x.com/2019/01/26/kuAM79.png''I love markdown'') 如果本地图片是位于文章的同名目录下，那么就要用到一个插件了，它的功能就是在markdown文件转化为静态页面的时候，自动转换图片路径。 1npm install hexo-asset-image --save 设置_config.yml配置文件中post_asset_folder: true 现在，假如通过命令hexo new &quot;postTitle&quot;新建的文章： 12345postTitle├── apppicker.jpg├── logo.jpg└── rules.jpgpostTitle.md 使用![logo](logo.jpg)就可以方便的插入本地图片了，如果你使用的是Typora编辑器，那么插入本地图片更是方便！ 只需要在文件–&gt;偏好设置–&gt;图像里面做一下设置：复制到指定路径:./${filename} 9.3 数学公式的输入 更换Hexo的markdown渲染引擎，hexo-renderer-kramed引擎是在默认的渲染引擎hexo-renderer-marked的基础上修改了一些bug，两者比较接近，也比较轻量级。 12npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save 执行上面的命令即可，先卸载原来的渲染引擎，再安装新的。 进入到主题目录，找到_config.yml配置问题，把mathjax默认的false修改为true，具体如下： 1234# 是否支持 数学公式mathjax: enable: true per_page: true 我使用BMW的主题，做完上述配置，公式已经能够正常渲染了。 对于有的主题，还需要在文章的Front-matter里打开mathjax开关，如下： 12345678910111213141516---title: mathjax.htmldate: 2019-01-25 21:01:30tags:mathjax: true---**真空中的光速：**$$\\begin{align*}c =&amp; \\frac{1}{\\sqrt{e_0\\mu_0}} = 2.9979\\times10^8 m/s \\\\\\text{其中:} \\\\ &amp;e_0--\\text{电常数} \\\\ &amp;\\mu_0--\\text{磁常数}\\end{align*}$$ 真空中的光速： \\begin{align*} c =&amp; \\frac{1}{\\sqrt{e_0\\mu_0}} = 2.9979\\times10^8 m/s \\\\ \\text{其中:} \\\\ &amp;e_0--\\text{电常数} \\\\ &amp;\\mu_0--\\text{磁常数} \\end{align*} 最美的公式： \\begin{equation} e^{i\\pi} + 1 = 0 \\end{equation} 更多公式输入方法参考： Markdown 常用公式(github 编辑公式) 9.4 音乐播放 我用到的这个主题BMW内置了音乐播放器，但还是折腾了一下，主要是很多音乐MP3外链失效导致无法播放。 修改了一下&quot;.\\themes\\bmw\\layout\\_partial\\player.ejs&quot;，改为了自动播放: 1234567new APlayer({ container: document.getElementById(&apos;&lt;%- id %&gt;&apos;), theme: &apos;#e96900&apos;, autoplay: true, # Add autoplay listFolded: &lt;%- listFolded%&gt;, audio: &lt;%- JSON.stringify(playlist) %&gt;}); 下面介绍一个很好的音乐外链提取网址： http://tool.mkblog.cn/music/ http://tool.mkblog.cn/kuwo/index.php 9.5 SEO优化 本博客刚开始写，除了我自己也没别人看。 先略过。 折腾参考： HEXO SEO 高级优化","link":"/categories/Hexo/my-hexo-blog/"}],"tags":[{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"Github","slug":"Github","link":"/tags/Github/"},{"name":"Netlify","slug":"Netlify","link":"/tags/Netlify/"},{"name":"github pages","slug":"github-pages","link":"/tags/github-pages/"},{"name":"coding pages","slug":"coding-pages","link":"/tags/coding-pages/"},{"name":"travis-ci","slug":"travis-ci","link":"/tags/travis-ci/"},{"name":"Proxifier","slug":"Proxifier","link":"/tags/Proxifier/"},{"name":"Go","slug":"Go","link":"/tags/Go/"},{"name":"Qt","slug":"Qt","link":"/tags/Qt/"},{"name":"theme","slug":"theme","link":"/tags/theme/"},{"name":"hexo-theme-icarus","slug":"hexo-theme-icarus","link":"/tags/hexo-theme-icarus/"},{"name":"plugins","slug":"plugins","link":"/tags/plugins/"},{"name":"tencent","slug":"tencent","link":"/tags/tencent/"},{"name":"meeting","slug":"meeting","link":"/tags/meeting/"}],"categories":[{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"},{"name":"Others","slug":"Others","link":"/categories/Others/"}]}