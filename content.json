{"pages":[{"title":"about","text":"这家伙很懒~~","link":"/about/index.html"},{"title":"friends","text":"","link":"/friends/index.html"},{"title":"categories","text":"","link":"/categories/index.html"},{"title":"tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Welcome","text":"e^{i\\pi} + 1 = 0","link":"/categories/welcome/"},{"title":"Hexo配置主题与插件","text":"本文记录如何配置Hexo的主题和插件。 目标主题： [x] icarus 博客插件： 一、安装主题hexo-theme-icarus有了两种方法，任选其一： 去icarus的Github主页下载，解压后放置到博客根目录下的themes目录中(解压后的目录需要重命名为icarus) 在命令行中cd至博客根目录，安装主题： 1git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus 二、基础配置先要了解下Hexo博客的配置文件： 站点配置文件: 在博客根目录下的_config.yml文件 主题配置文件: 在主题/themes/icarus目录下的_config.yml文件 2.1 修改站点配置文件** 打开博客根目录下的站点配置文件_config.yml，设置language和theme 在站点配置文件的第11行左右： 12# 每个主题设置的不一样，例如`bwm`主题这里设置的是zh-Hanslanguage: zh-CN 在站点配置文件的第76行左右： 1234# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: icarus 2.2 修改主题配置文件**打开/themes/icarus目录下的主题配置文件，做如下配置： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231# Version of the Icarus theme that is currently usedversion: 2.6.0# Path or URL to the website's iconfavicon: /images/favicon.svg# Additional HTML meta tags in an array.meta: # canonical_url of your sitecanonical_url: # Path or URL to RSS atom.xmlrss: # Path or URL to the website's logo to be shown on the left of the navigation bar or footerlogo: /images/logo.svg# Open Graph metadata# https://hexo.io/docs/helpers.html#open-graphopen_graph: # Facebook App ID fb_app_id: # Facebook Admin ID fb_admins: # Twitter ID twitter_id: # Twitter site twitter_site: # Google+ profile link google_plus: # Navigation bar link settingsnavbar: # Navigation bar menu links menu: 主页: / 归档: /archives 分类: /categories 标签: /tags 友链: /friends 关于: /about # Navigation bar links to be shown on the right links: Download on GitHub: icon: fab fa-github url: 'https://github.com/hero/hexo-blog'# Footer section link settingsfooter: # Links to be shown on the right of the footer section links: Creative Commons: icon: fab fa-creative-commons url: 'https://creativecommons.org/' Attribution 4.0 International: icon: fab fa-creative-commons-by url: 'https://creativecommons.org/licenses/by/4.0/' Download on GitHub: icon: fab fa-github url: 'https://github.com/hero/hero.github.io'# Article display settingsarticle: # Code highlight settings highlight: # Code highlight themes # https://github.com/highlightjs/highlight.js/tree/master/src/styles theme: atom-one-dark # Show code copying button clipboard: false # Default folding status of the code blocks. Can be \"\", \"folded\", \"unfolded\" fold: unfolded # Whether to show article thumbnail images thumbnail: true # Whether to show estimate article reading time readtime: true# Search plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Searchsearch: # Name of the search plugin type: insight# Comment plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Commentcomment: # Name of the comment plugin type: # Donation entries# https://ppoffice.github.io/hexo-theme-icarus/categories/Donation/donate: - # Donation entry name type: alipay # Qrcode image URL qrcode: '/images/alipay-donate.png' - # Donation entry name type: wechat # Qrcode image URL qrcode: '/images/wx-donate.png'# Share plugin settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Plugins/Shareshare: # Share plugin name type: # Sidebar settings.# Please be noted that a sidebar is only visible when it has at least one widgetsidebar: # left sidebar settings left: # Whether the left sidebar is sticky when page scrolls # https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/ sticky: false # right sidebar settings right: # Whether the right sidebar is sticky when page scrolls # https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/make-a-sidebar-sticky-when-page-scrolls/ sticky: true# Sidebar widget settings# https://ppoffice.github.io/hexo-theme-icarus/categories/Widgets/widgets: - # Widget name type: profile # Where should the widget be placed, left or right position: left # Author name to be shown in the profile widget author: herowuking # Title of the author to be shown in the profile widget author_title: Researcher # Author's current location to be shown in the profile widget location: Chongqing, China # Path or URL to the avatar to be shown in the profile widget avatar: '/images/avatar.png' # Email address for the Gravatar to be shown in the profile widget gravatar: # Whether to show avatar image rounded or square avatar_rounded: false # Path or URL for the follow button follow_link: 'https://github.com/hero' # Links to be shown on the bottom of the profile widget social_links: Github: icon: fab fa-github url: 'https://github.com/hero' Facebook: icon: fab fa-facebook url: 'https://facebook.com' Twitter: icon: fab fa-twitter url: 'https://twitter.com' Dribbble: icon: fab fa-dribbble url: 'https://dribbble.com' RSS: icon: fas fa-rss url: / - # 目录 type: toc # Where should the widget be placed, left or right position: left - # 分类 type: category # Where should the widget be placed, left or right position: left - # 归档 type: archive # Where should the widget be placed, left or right position: left - # 标签 type: tag # Where should the widget be placed, left or right position: left - # 近期文章 type: recent_posts # Where should the widget be placed, left or right position: right - # 标签云 type: tagcloud # Where should the widget be placed, left or right position: right# -# # 外部链接# type: links# # Where should the widget be placed, left or right# position: left# # Links to be shown in the links widget# links:# Google: 'https://google.com'# Baidu: 'https://baidu.com'# Other plugin settingsplugins: # Enable page animations animejs: true # Enable the lightGallery and Justified Gallery plugins # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/gallery-plugin/ gallery: true # Enable the Outdated Browser plugin # http://outdatedbrowser.com/ outdated-browser: true # Enable the MathJax plugin # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/mathjax-plugin/ mathjax: true # Show the back to top button on mobile devices back-to-top: true # Google Analytics plugin settings # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Google-Analytics google-analytics: # Google Analytics tracking id tracking_id: # Baidu Analytics plugin settings # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Baidu-Analytics baidu-analytics: # Baidu Analytics tracking id tracking_id: # Hotjar user feedback plugin # https://ppoffice.github.io/hexo-theme-icarus/Plugins/General/site-analytics-plugin/#Hotjar hotjar: # Hotjar site id site_id: # Show a loading progress bar at top of the page progressbar: true # BuSuanZi site/page view counter # https://busuanzi.ibruce.info busuanzi: true# CDN provider settings# https://ppoffice.github.io/hexo-theme-icarus/Configuration/Theme/speed-up-your-site-with-custom-cdn/providers: # Name or URL of the JavaScript and/or stylesheet CDN provider cdn: jsdelivr # Name or URL of the webfont CDN provider fontcdn: google # Name or URL of the webfont Icon CDN provider iconcdn: fontawesome 如上所示，我开启了不算子网站访问数量统计，因此需要修改一下/themes/icarus/layout/common/footer.ejs模板文件: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465&lt;footer class=&quot;footer&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;level&quot;&gt; &lt;div class=&quot;level-start has-text-centered-mobile&quot;&gt; &lt;a class=&quot;footer-logo is-block has-mb-6&quot; href=&quot;&lt;%- url_for(&apos;/&apos;) %&gt;&quot;&gt; &lt;% if (logo &amp;&amp; logo.text) { %&gt; &lt;%= logo.text %&gt; &lt;% } else { %&gt; &lt;img src=&quot;&lt;%- url_for(logo) %&gt;&quot; alt=&quot;&lt;%= title %&gt;&quot; height=&quot;28&quot;&gt; &lt;% } %&gt; &lt;/a&gt; &lt;p class=&quot;is-size-7&quot;&gt; &amp;copy; &lt;%= date(new Date(), &apos;YYYY&apos;) %&gt; &lt;%= author || title %&gt;&amp;nbsp; Powered by &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt; &amp; &lt;a href=&quot;https://github.com/ppoffice/hexo-theme-icarus&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Icarus&lt;/a&gt; &lt;/p&gt; &lt;/div&gt; &lt;!-- 新增网站运行时长统计 --&gt; &lt;div class=&quot;level-middle&quot;&gt; &lt;span id=&quot;timeDate&quot;&gt;载入天数...&lt;/span&gt;&lt;span id=&quot;times&quot;&gt;载入时分秒...&lt;/span&gt; &lt;script&gt; var now = new Date(); function createtime() { var grt= new Date(&quot;1/26/2019 17:00:00&quot;);//此处修改你的建站时间或者网站上线时间 now.setTime(now.getTime()+250); days = (now - grt ) / 1000 / 60 / 60 / 24; dnum = Math.floor(days); hours = (now - grt ) / 1000 / 60 / 60 - (24 * dnum); hnum = Math.floor(hours); if(String(hnum).length ==1 ){hnum = &quot;0&quot; + hnum;} minutes = (now - grt ) / 1000 /60 - (24 * 60 * dnum) - (60 * hnum); mnum = Math.floor(minutes); if(String(mnum).length ==1 ){mnum = &quot;0&quot; + mnum;} seconds = (now - grt ) / 1000 - (24 * 60 * 60 * dnum) - (60 * 60 * hnum) - (60 * mnum); snum = Math.round(seconds); if(String(snum).length ==1 ){snum = &quot;0&quot; + snum;} document.getElementById(&quot;timeDate&quot;).innerHTML = &quot;本站已安全运行 &quot;+dnum+&quot; 天 &quot;; document.getElementById(&quot;times&quot;).innerHTML = hnum + &quot; 小时 &quot; + mnum + &quot; 分 &quot; + snum + &quot; 秒&quot;; } setInterval(&quot;createtime()&quot;,250); &lt;/script&gt; &lt;% if (busuanzi) { %&gt; &lt;br&gt; &lt;span id=&quot;busuanzi_container_site_pv&quot; style=&apos;display:none&apos;&gt; 总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot; style=&apos;color:#830026&apos;&gt;0&lt;/span&gt;次 &lt;/span&gt; &lt;% } %&gt; &lt;/div&gt; &lt;!-- 新增内容结束 --&gt; &lt;div class=&quot;level-end&quot;&gt; &lt;% if (Object.keys(links).length) { %&gt; &lt;div class=&quot;field has-addons is-flex-center-mobile has-mt-5-mobile is-flex-wrap is-flex-middle&quot;&gt; &lt;% for (let name in links) { let link = links[name]; %&gt; &lt;p class=&quot;control&quot;&gt; &lt;a class=&quot;button is-white &lt;%= typeof(link) !== &apos;string&apos; ? &apos;is-large&apos; : &apos;&apos; %&gt;&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; title=&quot;&lt;%= name %&gt;&quot; href=&quot;&lt;%= url_for(typeof(link) === &apos;string&apos; ? link : link.url) %&gt;&quot;&gt; &lt;% if (typeof(link) === &apos;string&apos;) { %&gt; &lt;%= name %&gt; &lt;% } else { %&gt; &lt;i class=&quot;&lt;%= link.icon %&gt;&quot;&gt;&lt;/i&gt; &lt;% } %&gt; &lt;/a&gt; &lt;/p&gt; &lt;% } %&gt; &lt;/div&gt; &lt;% } %&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/footer&gt; 2.3 效果预览更换一下/themes/icarus/source/images里面的素材文件。然后本地预览一下，基本样子就有了： 三、高级配置3.1 优化屏幕元素默认宽度icarus 主题采用了 Bulma 框架，实现布局的自适应。Bulma 将一块屏幕横向分成12列，页面中元素各取所需共同分割这12列。 icarus主题默认的文章显示区域个人觉得略窄，需要修改源代码。 首先，我们找到 icarus 主题设置 Widget 和 Post 宽度的代码： /themes/icarus/layout/common/widget.ejs 1234567switch (column_count()) { case 2: return &apos;is-4-tablet is-4-desktop is-4-widescreen&apos;; case 3: return &apos;is-4-tablet is-4-desktop is-3-widescreen&apos;;}return &apos;&apos;; /themes/icarus/layout/layout.ejs 123456789switch (column_count()) { case 1: return &apos;is-12&apos;; case 2: return &apos;is-8-tablet is-8-desktop is-8-widescreen&apos;; case 3: return &apos;is-8-tablet is-8-desktop is-6-widescreen&apos;;}return &apos;&apos;; icarus 可以设置资料、toc、归档等等Widget在文章的左侧或者右侧。也就是说，包括Widget和文章在内，列数在1~3列不等： 无Widget的时候，为1列； Widget统一在左侧或右侧时，为2列； Widget左、右侧都有时，为3列。 Bulma 引擎将屏幕横向分为12份，所有元素按照自己的需求使用即可。 通过 widget.ejs 文件，我们可以看到，对于插件而言： 如果屏幕分为2列，则插件的宽度为 is-4-widescreen，也即是4/12=33.33%的宽度； 如果屏幕分为3列，则插件的宽度为 is-3-widescreen，也即是3/12=25%的宽度，两列插件占了50%宽。 同样的，layout.ejs 文件针对文章也做了宽度限制： 如果屏幕分为1列，则文章的宽度为 is-12，也即是12/12=100%的宽度； 如果屏幕分为2列，则文章的宽度为 is-8-widescreen，也即是8/12=66.66%的宽度； 如果屏幕分为3列，则文章的宽度为 is-6-widescreen，也即是6/12=50%的宽度。 那么调整插件宽度的方法也就差不多想出来啦！修改代码如下：/themes/icarus/layout/common/widget.ejs 1234567switch (column_count()) { case 2: return 'is-4-tablet is-4-desktop is-3-widescreen'; case 3: return 'is-4-tablet is-4-desktop is-2-widescreen';}return ''; /themes/icarus/layout/layout.ejs 123456789switch (column_count()) { case 1: return 'is-12'; case 2: return 'is-8-tablet is-8-desktop is-9-widescreen'; case 3: return 'is-8-tablet is-8-desktop is-8-widescreen';}return ''; 要注意的是对应column的数量和是12，如果是三列就是2*Widget_width+main_width，如果是两列就是Widght_width+main_width。 还可以通过修改/themes/icarus/source/css/style.styl文件中的@media screen样式如下： 123456789101112@media screen and (min-width: screen-widescreen) .is-1-column .container .is-2-column .container max-width: screen-desktop - 1.5 * gap width: screen-desktop - 1.5 * gap@media screen and (min-width: screen-fullhd) .is-2-column .container max-width: screen-widescreen - 1.5 * gap width: screen-widescreen - 1.5 * gap .is-1-column .container max-width: screen-desktop - 2 * gap width: screen-desktop - 2 * gap 3.2 页面详情与首页布局分栏的不同设置icarus主题的主页默认是三栏设置的，左右两侧都有Widget，参考作者主页示例。 如何点击文章进入文章详情页面的时候变为左右两栏设置呢？参考Profile Sidebar Widget。 没有找到通过修改主题配置文件就能实现的方法，依然是需要修改源码的： /themes/includes/helpers/layout.js 1234567891011121314diff --git a/includes/helpers/layout.js b/includes/helpers/layout.jsindex 7fd6c07..6bfd0b3 100644--- a/includes/helpers/layout.js+++ b/includes/helpers/layout.js@@ -32,6 +32,9 @@ module.exports = function (hexo) { hexo.extend.helper.register('column_count', function () { let columns = 1;+ if (this.page.__post === true || this.page.__page === true) {+ return 2;+ } const hasColumn = hexo.extend.helper.get('has_column').bind(this); columns += hasColumn('left') ? 1 : 0; columns += hasColumn('right') ? 1 : 0; /themes/icarus/layout/common/widget.ejs 123456789101112131415diff --git a/layout/common/widget.ejs b/layout/common/widget.ejsindex 9f58bd5..c6b267c 100644--- a/layout/common/widget.ejs+++ b/layout/common/widget.ejs@@ -25,7 +25,7 @@ &lt;%- partial('widget/' + widget.type, { widget, post: page }) %&gt; &lt;% }) %&gt; &lt;% if (position === 'left') { %&gt;- &lt;div class=\"column-right-shadow is-hidden-widescreen &lt;%= sticky_class('right') %&gt;\"&gt;+ &lt;div class=\"column-right-shadow &lt;%= (page.__page !== true &amp;&amp; page.__post !== true) ? 'is-hidden-widescreen' : '' %&gt; &lt;%= sticky_class('right') %&gt;\"&gt; &lt;% get_widgets('right').forEach(widget =&gt; {%&gt; &lt;%- partial('widget/' + widget.type, { widget, post: page }) %&gt; &lt;% }) %&gt;diff --git a/layout/layout.ejs b/layout/layout.ejsindex cf7be87..b76c9e6 100644 /themes/icarus/layout/layout.ejs 1234567891011121314diff --git a/layout/layout.ejs b/layout/layout.ejsindex cf7be87..b76c9e6 100644--- a/layout/layout.ejs+++ b/layout/layout.ejs@@ -21,7 +21,9 @@ &lt;div class=\"columns\"&gt; &lt;div class=\"column &lt;%= main_column_class() %&gt; has-order-2 column-main\"&gt;&lt;%- body %&gt;&lt;/div&gt; &lt;%- partial('common/widget', { position: 'left' }) %&gt;+ &lt;% if (page.__page !== true &amp;&amp; page.__post !== true) { %&gt; &lt;%- partial('common/widget', { position: 'right' }) %&gt;+ &lt;% } %&gt; &lt;/div&gt; &lt;/div&gt; &lt;/section&gt; 参考： hexo-theme-icarus document Easy Hexo: hexo-theme-icaus Hexo | 初识icarus主题中的Bulma框架 博客更换ICARUS主题","link":"/categories/Hexo/custom-icarus-theme/"},{"title":"动手搭建基于Hexo的个人博客","text":"本文从零开始记录如何基于Hexo、Github、Coding.net、Travis CI搭建自己的个人博客。 0. 整体思路 一种方法是，利用hexo deploy一键自动部署到Github Pages和Coding Pages（个人推荐这种方法）。手动一键部署命令也很简单hexo d 另外，本地生成静态文件命令: hexo g 本地开启hexo服务浏览：hexo s，若要指定端口(有时候默认端口4000本地冲突了)就用命令hexo s -p 5000 还有一种逼格更高的，是利用Travis CI自动同步部署： 参考基于 Travis CI 实现 Hexo 在 Github 和 Coding 的同步部署，整体部署思路如下图所示： 注意:这里的Git仓储有3个： graph LR G0(1.Source github repo) --> Auto{Auto Deploy} Auto --> |Yes| TravisCI[Travis CI] Auto --> |No| Manual[Manual Deploy] TravisCI --> Gp[2.Github pages repo] TravisCI --> Cp[3.Coding pages repo] Manual --> Gp Manual --> Cp 1.Source github repo: 用来存储源文件(Private) 2.Github pages repo: Github pages 仓储(Public)，存储hexo部署后生成的静态网页文件; 3.Coding pages repo: 功能同上，是腾讯的国内Git仓储，方便国内访问。 如果不使用Travis CI自动部署，那么就是使用命令hexo d命令手工部署, 如果配置了Travis CI自动部署，那么就是直接推送修改后的源代码到Source github repo即可，Travis CI会自动执行hexo部署，生成静态网页文件后自动推送到Github pages repo和Coding pages repo。 Github 和 Coding 都能提供静态页面托管服务，利用 Travis CI 自动构建或hexo d一键部署 Hexo 博客的静态页面文件，推送到 Github Pages 和 Coding Pages 仓储所在的 master 分支。 1. 搭建本地可以访问的 Hexo 博客Hexo博客的本地安装和构建非常简单： 确认你的电脑上已经安装了Node.js和Git for windows 假设你想把你的本地 Hexo 博客放置在 D 盘根目录下，那么就在 D 盘单击鼠标右键—&gt;Git bash here 123456npm install hexo-cli -ghexo init hexo-blogcd hexo-blognpm installhexo g # hexo generatehexo s # hexo server 这些基础操作，请参考Hexo 官方文档 然后，就要选择自己喜欢的主题了，我选用的这款主题是BWM，一切操作参考官方文档。 2. 注册Github, 新建仓储Github 的注册和仓储的创建很容易，这点相信玩 Github 的都会了。 需要注意的一点就是： 为了让 Github Pages 访问域名尽可能的简短，Repository 的名称格式为username.github.io Repository 必须为public的，而且不要勾选Initilize this repository with a README 参考如下： 3. 注册Coding，新建仓储GitHub 是国外知名的 Git 仓储，但是 GitHub 不允许百度爬虫访问，为了 Blog 文章能被百度搜索引擎访问，我们同时要将博客托管到国内的 Coding，Coding现在被腾讯收了，所以注册登录之后就是腾讯开发者平台，这点没影响，登录可以使用微信了，反而方便。 注册和创建仓储方法跟在 Github 类似，注意点也相同，在此不再赘述。 4. 创建 SSH 密钥，私人访问令牌Git操作如果你不想每次都输入登录信息，那么就要利用 SSH 密钥文件了。 由于我的Github和Coding的登录用户名和邮箱不一样，所以我这里创建了 2 遍： 4.1 为 Github 创建 SSH 密钥文件，私人访问令牌1234git config --global user.name \"hero\"git config --global user.email \"herowuking@qq.com\"ssh-keygen -t rsa -C \"herowuking@qq.com\"# 上面命令回车后，请注意看提示! 文件名我输入`github`，passphrase留空 得到的私钥文件为github，公钥文件为github.pub 然后，登录 Github，在 Personal settings 中，将github.pub（公钥）文件中的内容添加进去： 12345git config --global user.name \"hero\"git config --global user.email \"herowuking@qq.com\"# 测试SSH连接Githubssh -T git@github.comHi hero! You've successfully authenticated, but GitHub does not provide shell access. 登录 Github，点击右上角个人图标，选择Settings—&gt;Developer settings—&gt;Peronal access tokens，新建一个私人访问令牌，勾选repo，然后Generate Token，得到一个字符串，这需要赶紧记下来的，一会儿你就看不到它！ 4.2 为 Coding 创建 SSH 密钥文件，私人访问令牌1234git config --global user.name \"wuking\"git config --global user.email \"wuying283@qq.com\"ssh-keygen -t rsa -C \"wuying283@qq.com\"# 上面命令回车后，请注意看提示! 文件名我输入`coding`，passphrase留空 得到的私钥文件为coding，公钥文件为coding.pub 同理，登录腾讯开发者平台，在个人设置中将coding.pub中的公钥字符串，添加到Coding的SSH公钥中： PS： 由于我这两个邮箱都在腾讯开发者平台注册了，所以github.pub文件中的字符串我也添加到了这个 Repository 中，同时将这个邮箱添加为了项目成员。 123456git config --global user.name \"hero\"git config --global user.email \"herowuking@qq.com\"# 测试ssh -T git@git.dev.tencent.comCoding 提示: Hello wuking, You've connected to Coding.net via SSH. This is a personal key.wuking，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥 登录腾讯开发者平台，在个人设置的访问令牌中，新建一个令牌，随便取个名字如Travis_CI_Depot，勾选权限project:depot，新建令牌，得到一个字符串。一定要赶紧记下来！，一会儿你就看不到它了。 5. 配置 Hexo，Push 到 Github 的 blog 分支Hexo 的配置文件是本地 Blog 中的_config.yml 文件： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: Herowuking's Blogsubtitle:description: 无影的天空keywords:author: herowukinglanguage: zh-Hanstimezone: Asia/Chongqing# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://hero.github.ioroot: /permalink: passages/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: truerelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace:# Home page setting# path: Root path for your blogs index page. (default = '')# per_page: Posts displayed per page. (0 = disable pagination)# order_by: Posts order. (Order by date descending by default)index_generator: path: \"\" per_page: 20 order_by: -date# Category &amp; Tagdefault_category: uncategorizedcategory_map:tag_map:# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 20pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: bmw# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: github: git@github.com:hero/hero.github.io.git coding: git@git.dev.tencent.com:wuking/wuking.coding.me.git branch: master message: 在 D:/hexo-blog 目录中，单击鼠标右键，选择Git bash here： 12345git initgit add -Agit commit -m \"first commit\"git remote add origin git@github.com:hero/hero.github.io.gitgit push -u origin master:blog 登录 Github 检测效果： 6. 配置 Travis CI，再次 Push登录 Travis CI，使用 Github 账号授权登录。然后开启 hexo 博客仓储的开关，点击Settings按钮设置全局变量： 用步骤 4.1创建的私人访问令牌创建一个全局变量 GI_TOKEN，用步骤 4.2创建的私人访问令牌创建另一个全局变量 CO_TOKEN，这两个变量后面.travis.yml 配置文件中要用到。 在本地 Blog 的根目录中创建一个.travis.yml 配置文件，内容如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152language: node_jsnode_js: - \"10\"cache: apt: true directories: - node_modules# S: Build Lifecycleinstall: - npm install hexo-cli -g - npm install hexo --save - npm installscript: - hexo clean - hexo gafter_script: - cp ./README.md ./public/README.md - cd ./public - git init - git config user.name \"hero\" - git config user.email \"herowuking@qq.com\" - git add . - git commit -m \"Update Blog By TravisCI With Build $TRAVIS_BUILD_NUMBER\" - git tag -a v0.0.$TRAVIS_BUILD_NUMBER -m \"Auto Taged By TravisCI With Build $TRAVIS_BUILD_NUMBER\" # Github Pages - git push --force --quiet \"https://${GI_TOKEN}@${GI_REF}\" master:master # Github Pages tags - git push --quiet \"https://${GI_TOKEN}@${GI_REF}\" master:master --tags # Change login user info - git config user.name \"wuking\" - git config user.email \"wuying283@qq.com\" # Coding Pages - git push --force --quiet \"https://wuking:${CO_TOKEN}@${CO_REF}\" master:master # Coding Pages tags - git push --quiet \"https://wuking:${CO_TOKEN}@${CO_REF}\" master:master --tags# E: Build LifeCyclebranches: only: - blogenv: global: # Github Pages - GI_REF: github.com/hero/hero.github.io.git # Coding Pages - CO_REF: git.dev.tencent.com/wuking/wuking.coding.me.git 再次 Push： 123git add .travis.yml # 如果你不确认有哪些文件修改了，请使用 `git add -A`命令git commit -m \"Add .travis.yml\"git push -u origin master:blog 7. 开启 Github 和 Coding 的 Pages 服务，检阅效果分别登录Github和Coding，查看 master 分支下是否有注释为Update Blog By TravisCI With Build xxx字样的推送，如果没有检查 Travis CI 的日志，以及上面的配置是否有误，确认看到了 Travis CI 的自动推送之后，就可以分别在项目设置里面，开启 Pages 服务了。 Github Pages 默认是开启的，只要你的 Repository 名称是usename.github.io格式，而且 master 分支里面不为空，有静态页面文件存在即可。 Coding Pages 需要手工开启Pages 服务。 8. 使用hexo deploy一键自动部署Travis CI只是显得逼格较高而已，对于Hexo发布博客来讲，有点鸡肋。 有些主题会让你发现本地浏览没问题，Travis CI构建的反而有问题~ 在_config.yml 文件文件中配置好deploy 123456789# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repo: github: git@github.com:hero/hero.github.io.git coding: git@git.dev.tencent.com:wuking/wuking.coding.me.git branch: master message: 然后就可以在Git bash命令行中一键部署了： 1hexo clean &amp; hexo deploy 个人认为这种操作更方便，而且本地浏览没问题，部署就不会有问题！ 但是，如果你想多地编辑 Hexo 博客的话，源文件还是要发布到 Git 远程仓储上。 9. 其它设置&amp;技巧9.1 增加文章置顶功能首先，要知道通过hexo new &quot;title&quot;命令新建的文章，都是以./scaffolds/post.md为模板的。 我将post.md修改如下： 123456789101112---title: { { title } }date: { { date } }categories: 未分类tags: - defaulttop:---&lt;!-- 以上是摘要 --&gt;&lt;!-- more --&gt;&lt;!-- 以下是正文 --&gt; 文章置顶有插件支持： 12npm uninstall hexo-generator-index --savenpm install hexo-generator-index-pin-top --save 然后，只要在需要置顶的文章的Front-matter中加上top: true属性即可。比如下面这篇文章： 12345678---title: 欢迎光临寒舍categories: 未分类tags: - defaultdate: 2019-01-24 20:19:50top: true--- 到此，文章已经置顶了，下面修改主题目录下的&quot;.\\themes\\bmw\\layout\\index.ejs&quot;文件，在文件约59行下插入如下语句： 12345&lt;div class=&quot;article-meta pull-left&quot;&gt;&lt;!--原文第59行--&gt;&lt;!-- 添加置顶标志 --&gt;&lt;% if(psg.top) { %&gt; &lt;font color=#A52A2A&gt;【置顶】&lt;/font&gt;&lt;% } %&gt; 9.2 发布自带图片的文章 我们都知道，在Markdown里面，图片的引用是： 1![图片alt](图片地址''图片title'') 例如： 1![I:love:markdown](https://s2.ax1x.com/2019/01/26/kuAM79.png''I love markdown'') 如果本地图片是位于文章的同名目录下，那么就要用到一个插件了，它的功能就是在markdown文件转化为静态页面的时候，自动转换图片路径。 1npm install hexo-asset-image --save 设置_config.yml配置文件中post_asset_folder: true 现在，假如通过命令hexo new &quot;postTitle&quot;新建的文章： 12345postTitle├── apppicker.jpg├── logo.jpg└── rules.jpgpostTitle.md 使用![logo](logo.jpg)就可以方便的插入本地图片了，如果你使用的是Typora编辑器，那么插入本地图片更是方便！ 只需要在文件—&gt;偏好设置—&gt;图像里面做一下设置：复制到指定路径:./${filename} 9.3 数学公式的输入更换Hexo的markdown渲染引擎，hexo-renderer-kramed引擎是在默认的渲染引擎hexo-renderer-marked的基础上修改了一些bug，两者比较接近，也比较轻量级。 12npm uninstall hexo-renderer-marked --savenpm install hexo-renderer-kramed --save 执行上面的命令即可，先卸载原来的渲染引擎，再安装新的。 进入到主题目录，找到_config.yml配置问题，把mathjax默认的false修改为true，具体如下： 1234# 是否支持 数学公式mathjax: enable: true per_page: true 我使用BMW的主题，做完上述配置，公式已经能够正常渲染了。 对于有的主题，还需要在文章的Front-matter里打开mathjax开关，如下： 1234567891011121314---title: mathjax.htmldate: 2019-01-25 21:01:30tags:mathjax: true---**真空中的光速：**$$c = \\frac{1}{\\sqrt{e_0\\mu_0}} = 2.9979\\times10^8 m/s \\\\其中: \\\\ e_0--电常数 \\\\ \\mu_0--磁常数$$ 真空中的光速： c = \\frac{1}{\\sqrt{e_0\\mu_0}} = 2.9979\\times10^8 m/s \\\\ 其中: \\\\ e_0--电常数 \\\\ \\mu_0--磁常数更多公式输入方法参考： Markdown 常用公式(github 编辑公式) 9.4 音乐播放我用到的这个主题BMW内置了音乐播放器，但还是折腾了一下，主要是很多音乐MP3外链失效导致无法播放。 修改了一下&quot;.\\themes\\bmw\\layout\\_partial\\player.ejs&quot;，改为了自动播放: 1234567new APlayer({ container: document.getElementById(&apos;&lt;%- id %&gt;&apos;), theme: &apos;#e96900&apos;, autoplay: true, # Add autoplay listFolded: &lt;%- listFolded%&gt;, audio: &lt;%- JSON.stringify(playlist) %&gt;}); 下面介绍一个很好的音乐外链提取网址： http://tool.mkblog.cn/music/ http://tool.mkblog.cn/kuwo/index.php 9.5 SEO优化本博客刚开始写，除了我自己也没别人看。 先略过。 折腾参考： HEXO SEO 高级优化","link":"/categories/Hexo/my-hexo-blog/"}],"tags":[{"name":"others","slug":"others","link":"/tags/others/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"theme","slug":"theme","link":"/tags/theme/"},{"name":"hexo-theme-icarus","slug":"hexo-theme-icarus","link":"/tags/hexo-theme-icarus/"},{"name":"plugins","slug":"plugins","link":"/tags/plugins/"},{"name":"github pages","slug":"github-pages","link":"/tags/github-pages/"},{"name":"coding pages","slug":"coding-pages","link":"/tags/coding-pages/"},{"name":"travis-ci","slug":"travis-ci","link":"/tags/travis-ci/"}],"categories":[{"name":"others","slug":"others","link":"/categories/others/"},{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"}]}